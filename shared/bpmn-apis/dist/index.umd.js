var __defProp=Object.defineProperty,__defNormalProp=(t,e,s)=>e in t?__defProp(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,__publicField=(t,e,s)=>(__defNormalProp(t,"symbol"!=typeof e?e+"":e,s),s);!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@herodotus/core")):"function"==typeof define&&define.amd?define(["exports","@herodotus/core"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["@herodotus/bpmn-apis"]={},t.HerodotusCore)}(this,(function(t,e){"use strict";class PathParamBuilder{constructor(t){__publicField(this,"address"),__publicField(this,"operation",""),__publicField(this,"id",""),__publicField(this,"key",""),__publicField(this,"tenantId",""),this.address=t}setOperation(t){return this.operation=t,this}setId(t){return this.id=t,this}setKey(t){return this.key=t,this}setTenantId(t){return this.tenantId=t,this}withParam(t){return this.id=t.id,this.key=t.key,this.tenantId=t.tenantId,this}build(){let t=this.address;return e.lodash.endsWith(t,"/")&&(t=e.lodash.trimEnd(t,"/")),this.id?t+="/"+this.id:(this.key&&(t+="/key/"+this.key),this.tenantId&&(t+="/tenant-id/"+this.tenantId)),this.operation&&(t+="/"+this.operation),t}}class BpmnService extends e.Service{getCountAddress(){return this.getBaseAddress()+"/count"}createAddressWithParam(t,e=""){let s=new PathParamBuilder(this.getBaseAddress());return e?s.withParam(t).setOperation(e).build():s.withParam(t).build()}}class BpmnQueryByGetService extends BpmnService{getCount(t={}){return new Promise(((e,s)=>{this.getConfig().getHttp().get(this.getCountAddress(),t).then((t=>{if(t){e(t.count)}})).catch((t=>{s(t)}))}))}getList(t,e,s={}){const r=Object.assign(s,{sortBy:t.sortBy,sortOrder:t.sortOrder,firstResult:(t.pageNumber-1)*t.pageSize,maxResults:t.pageSize});return new Promise(((s,i)=>{this.getConfig().getHttp().get(this.getBaseAddress(),r).then((r=>{const i={content:r,totalPages:e?(e+t.pageSize-1)/t.pageSize:e,totalElements:String(e)};s(i)})).catch((t=>{i(t)}))}))}getByPage(t,e={}){return new Promise(((s,r)=>{this.getCount(e).then((r=>{this.getList(t,r,e).then((t=>{s(t)}))})).catch((t=>{r(t)}))}))}}class BpmnQueryService extends BpmnQueryByGetService{get(t){return this.getConfig().getHttp().get(this.createAddressWithParam({id:t}))}}class BpmnQueryByPostService extends BpmnQueryService{getPostCount(t={}){return new Promise(((e,s)=>{this.getConfig().getHttp().get(this.getCountAddress(),t).then((t=>{if(t){e(t.count)}})).catch((t=>{s(t)}))}))}getPostList(t,s,r=[],i={}){const n={firstResult:(t.pageNumber-1)*t.pageSize,maxResults:t.pageSize};let a={};return e.lodash.isEmpty(r)||(a=Object.assign(i,{sorting:r})),new Promise(((e,r)=>{this.getConfig().getHttp().postWithParams(this.getBaseAddress(),n,a).then((r=>{const i={content:r,totalPages:s?(s+t.pageSize-1)/t.pageSize:s,totalElements:String(s)};e(i)})).catch((t=>{r(t)}))}))}getPostByPage(t,e=[],s={}){return new Promise(((r,i)=>{this.getPostCount(s).then((i=>{this.getPostList(t,i,e,s).then((t=>{r(t)}))})).catch((t=>{i(t)}))}))}}class BaseBpmnService extends BpmnQueryByPostService{}const s=class extends BaseBpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new s(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/deployment"}getCreateAddress(){return this.getBaseAddress()+"/create"}getDuplicateFiltering(t){return t.deployChangedOnly?"true":t.enableDuplicateFiltering?String(t.enableDuplicateFiltering):"false"}create(t){let s=new FormData;s.append("deployment-name",t.deploymentName),s.append("deploy-changed-only",t.deployChangedOnly?"true":"false"),s.append("enable-duplicate-filtering",this.getDuplicateFiltering(t)),s.append("deployment-source",t.deploymentSource?t.deploymentSource:"Dante Cloud UI");const r=t.deploymentActivationTime?t.deploymentActivationTime:new Date;s.append("deployment-activation-time",e.moment(r).utc().format()),t.tenantId&&s.append("tenant-id",t.tenantId);let i=new Blob([t.resource],{type:"application/octet-stream"});return s.append("data",i,t.deploymentName),this.getConfig().getHttp().post(this.getCreateAddress(),s,{contentType:e.ContentTypeEnum.MULTI_PART})}redeploy(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam({id:t},"redeploy"),e)}resources(t){return this.getConfig().getHttp().get(this.createAddressWithParam({id:t},"resources"))}resource(t,e){const s=this.getBaseAddress()+"/"+t+"/resources"+e;return this.getConfig().getHttp().get(s)}binaryResource(t,e){const s=this.getBaseAddress()+"/"+t+"/resources"+e+"/data";return this.getConfig().getHttp().get(s)}deleteById(t,e){return this.getConfig().getHttp().deleteWithParams(this.createAddressWithParam({id:t}),e)}registered(){const t=this.getBaseAddress()+"/registered";return this.getConfig().getHttp().get(t)}};let r=s;__publicField(r,"instance");const i=class extends BaseBpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new i(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/process-definition"}getActivityInstanceStatistics(t,e){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"statistics"),e)}getStaticCalled(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"static-called-process-definitions"))}getDiagram(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"diagram"))}getFormVariables(t,e){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"form-variables"),e)}getRenderedForm(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"rendered-form"))}getStartForm(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"startForm"))}getProcessInstanceStatistics(t){const e=this.getBaseAddress()+"/statistics";return this.getConfig().getHttp().get(e,t)}getXml(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"xml"))}getByPathParams(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t))}getDeployedStartForm(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"deployed-start-form"))}start(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"start"),e)}submitForm(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"submit-form"),e)}suspendById(t,e){return this.getConfig().getHttp().put(this.createAddressWithParam(t,"suspended"),e)}suspendByKey(t){const e=this.getBaseAddress()+"/suspended";return this.getConfig().getHttp().put(e,t)}historyTimeToLive(t,e){return this.getConfig().getHttp().put(this.createAddressWithParam(t,"history-time-to-live"),e)}deleteById(t,e){return this.getConfig().getHttp().deleteWithParams(this.createAddressWithParam({id:t}),e)}deleteByKey(t,e="",s){return this.getConfig().getHttp().deleteWithParams(this.createAddressWithParam({key:t,tenantId:e},"delete"),s)}restart(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam({id:t},"restart"),e)}restartAsync(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam({id:t},"restart-async"),e)}};let n=i;__publicField(n,"instance");const a=class extends BaseBpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new a(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/process-instance"}getActivityInstance(t){return this.getConfig().getHttp().get(this.createAddressWithParam({id:t},"activity-instances"))}modification(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam({id:t},"modification"),e)}modificationAsync(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam({id:t},"modification-async"),e)}deleteById(t,e){return this.getConfig().getHttp().deleteWithParams(this.createAddressWithParam({id:t}),e)}deleteAsync(t){const e=this.getBaseAddress()+"delete";return this.getConfig().getHttp().post(e,t)}deleteAsyncHistoricQueryBased(t){const e=this.getBaseAddress()+"delete-historic-query-based";return this.getConfig().getHttp().post(e,t)}jobRetries(t){const e=this.getBaseAddress()+"job-retries";return this.getConfig().getHttp().post(e,t)}jobRetriesHistoricQueryBased(t){const e=this.getBaseAddress()+"job-retries-historic-query-based";return this.getConfig().getHttp().post(e,t)}variablesAsync(t){const e=this.getBaseAddress()+"variables-async";return this.getConfig().getHttp().post(e,t)}messageAsync(t){const e=this.getBaseAddress()+"message-async";return this.getConfig().getHttp().post(e,t)}suspendById(t,e){return this.getConfig().getHttp().put(this.createAddressWithParam({id:t},"suspended"),e)}suspend(t){const e=this.getBaseAddress()+"suspended";return this.getConfig().getHttp().put(e,t)}suspendedAsync(t){const e=this.getBaseAddress()+"suspended-async";return this.getConfig().getHttp().post(e,t)}};let o=a;__publicField(o,"instance");const g=class extends BaseBpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new g(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/task"}getCreateAddress(){return this.getBaseAddress()+"/create"}deleteById(t,e){return this.getConfig().getHttp().deleteWithParams(this.createAddressWithParam({id:t}),e)}getFormKey(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"form"))}claimTask(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"claim"),e)}unclaimTask(t){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"unclaim"),{})}completeTask(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"complete"),e)}submitTaskForm(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"submit-form"),e)}resolveTask(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"resolve"),e)}setAssignee(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"assignee"),e)}delegateTask(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"delegate"),e)}getDeployedTaskForm(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"deployed-form"))}getRenderedTaskForm(t){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"rendered-form"))}getTaskFormVariables(t,e){return this.getConfig().getHttp().get(this.createAddressWithParam(t,"form-variables"),e)}createTask(t){return this.getConfig().getHttp().post(this.getCreateAddress(),t)}updateTask(t,e){return this.getConfig().getHttp().put(this.createAddressWithParam(t),e)}handleTaskBpmnError(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"bpmnError"),e)}handleTaskBpmnEscalation(t,e){return this.getConfig().getHttp().post(this.createAddressWithParam(t,"bpmnEscalation"),e)}};let d=g;__publicField(d,"instance");const c=class extends BpmnQueryByPostService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new c(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/activity-instance"}};let h=c;__publicField(h,"instance");const p=class extends BpmnQueryByPostService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new p(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/process-instance"}};let u=p;__publicField(u,"instance");const l=class extends BpmnQueryByPostService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new l(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/task"}};let m=l;__publicField(m,"instance");const f=class{constructor(t){__publicField(this,"config",{}),this.config=t}static getInstance(t){return null==this.instance&&(this.instance=new f(t)),this.instance}getConfig(){return this.config}deployment(){return r.getInstance(this.config)}processDefinition(){return n.getInstance(this.config)}processInstance(){return o.getInstance(this.config)}task(){return d.getInstance(this.config)}historyActivityInstance(){return h.getInstance(this.config)}historyProcessInstance(){return u.getInstance(this.config)}historyTask(){return m.getInstance(this.config)}};let y=f;__publicField(y,"instance");Object.defineProperty(t,"Axios",{enumerable:!0,get:()=>e.Axios}),Object.defineProperty(t,"ContentTypeEnum",{enumerable:!0,get:()=>e.ContentTypeEnum}),Object.defineProperty(t,"HttpConfig",{enumerable:!0,get:()=>e.HttpConfig}),Object.defineProperty(t,"Service",{enumerable:!0,get:()=>e.Service}),Object.defineProperty(t,"lodash",{enumerable:!0,get:()=>e.lodash}),Object.defineProperty(t,"moment",{enumerable:!0,get:()=>e.moment}),t.BaseBpmnService=BaseBpmnService,t.BpmnQueryByGetService=BpmnQueryByGetService,t.BpmnQueryByPostService=BpmnQueryByPostService,t.BpmnQueryService=BpmnQueryService,t.BpmnService=BpmnService,t.DeploymentService=r,t.HistoryActivityInstanceService=h,t.HistoryProcessInstanceService=u,t.HistoryTaskService=m,t.PathParamBuilder=PathParamBuilder,t.ProcessDefinitionService=n,t.ProcessInstanceService=o,t.TaskService=d,t.createBpmnApi=(t,s,r,i)=>{const n=new e.HttpConfig(t,s,r,i);return y.getInstance(n)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
