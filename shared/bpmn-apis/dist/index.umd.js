var __defProp=Object.defineProperty,__defNormalProp=(e,t,s)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,__publicField=(e,t,s)=>(__defNormalProp(e,"symbol"!=typeof t?t+"":t,s),s);!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@herodotus/core")):"function"==typeof define&&define.amd?define(["exports","@herodotus/core"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["@herodotus/bpmn-apis"]={},e.HerodotusCore)}(this,(function(e,t){"use strict";class PathParamBuilder{constructor(e){__publicField(this,"address"),__publicField(this,"action",""),this.address=e}getWellFormedAddress(){let e=this.address;return t.lodash.endsWith(e,"/")?t.lodash.trimEnd(e,"/"):e}addAction(e){this.action=e}appendAction(e){return this.action?e+"/"+this.action:e}}class UnionPathParamBuilder extends PathParamBuilder{constructor(e){super(e),__publicField(this,"id",""),__publicField(this,"key",""),__publicField(this,"tenantId","")}setAction(e){return this.addAction(e),this}withParam(e){return this.id=e.id,this.key=e.key,this.tenantId=e.tenantId,this}build(){let e=this.getWellFormedAddress();return this.id?e+="/"+this.id:(this.key&&(e+="/key/"+this.key),this.tenantId&&(e+="/tenant-id/"+this.tenantId)),this.appendAction(e)}}class RelationPathParamBuilder extends PathParamBuilder{constructor(e){super(e),__publicField(this,"id",""),__publicField(this,"relationId","")}withParam(e){return this.id=e.id,this.relationId=e.relationId,this.addAction(e.action),this}build(){let e=this.getWellFormedAddress();return e+="/"+this.id,e=this.appendAction(e),e+="/"+this.relationId,e}}class BpmnService extends t.Service{getCountAddress(){return this.getBaseAddress()+"/count"}createAddressByParam(e,t=""){let s=new UnionPathParamBuilder(this.getBaseAddress());return t?s.withParam(e).setAction(t).build():s.withParam(e).build()}createAddressByRelation(e,t,s){return new RelationPathParamBuilder(this.getBaseAddress()).withParam({id:e,relationId:t,action:s}).build()}createAddressById(e,t=""){return this.createAddressByParam({id:e},t)}delete(e,s={}){return t.lodash.isEmpty(s)?this.getConfig().getHttp().delete(this.createAddressById(e)):this.getConfig().getHttp().deleteWithParams(this.createAddressById(e),s)}}class BpmnQueryByGetService extends BpmnService{getCount(e={}){return new Promise(((t,s)=>{this.getConfig().getHttp().get(this.getCountAddress(),e).then((e=>{if(e){t(e.count)}})).catch((e=>{s(e)}))}))}getList(e,t,s={}){const n=Object.assign(s,{sortBy:e.sortBy,sortOrder:e.sortOrder,firstResult:(e.pageNumber-1)*e.pageSize,maxResults:e.pageSize});return new Promise(((s,r)=>{this.getConfig().getHttp().get(this.getBaseAddress(),n).then((n=>{const r={content:n,totalPages:t?(t+e.pageSize-1)/e.pageSize:t,totalElements:String(t)};s(r)})).catch((e=>{r(e)}))}))}getByPage(e,t={}){return new Promise(((s,n)=>{this.getCount(t).then((n=>{this.getList(e,n,t).then((e=>{s(e)}))})).catch((e=>{n(e)}))}))}getAll(e,t={}){return new Promise(((s,n)=>{this.getCount(t).then((n=>{const r=Object.assign(t,{sortBy:e.sortBy,sortOrder:e.sortOrder,firstResult:0,maxResults:n});this.getConfig().getHttp().get(this.getBaseAddress(),r).then((e=>{s(e)}))})).catch((e=>{n(e)}))}))}}class BpmnQueryService extends BpmnQueryByGetService{get(e){return this.getConfig().getHttp().get(this.createAddressById(e))}}class BpmnQueryByPostService extends BpmnQueryService{getPostCount(e={}){return new Promise(((t,s)=>{this.getConfig().getHttp().get(this.getCountAddress(),e).then((e=>{if(e){t(e.count)}})).catch((e=>{s(e)}))}))}getPostList(e,s,n=[],r={}){const i={firstResult:(e.pageNumber-1)*e.pageSize,maxResults:e.pageSize};let a={};return t.lodash.isEmpty(n)||(a=Object.assign(r,{sorting:n})),new Promise(((t,n)=>{this.getConfig().getHttp().postWithParams(this.getBaseAddress(),i,a).then((n=>{const r={content:n,totalPages:s?(s+e.pageSize-1)/e.pageSize:s,totalElements:String(s)};t(r)})).catch((e=>{n(e)}))}))}getPostByPage(e,t=[],s={}){return new Promise(((n,r)=>{this.getPostCount(s).then((r=>{this.getPostList(e,r,t,s).then((e=>{n(e)}))})).catch((e=>{r(e)}))}))}}class BaseBpmnService extends BpmnQueryByPostService{}const s=class extends BpmnQueryService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new s(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/deployment"}getCreateAddress(){return this.getBaseAddress()+"/create"}getDuplicateFiltering(e){return e.deployChangedOnly?"true":e.enableDuplicateFiltering?String(e.enableDuplicateFiltering):"false"}create(e){let s=new FormData;s.append("deployment-name",e.deploymentName),s.append("deploy-changed-only",e.deployChangedOnly?"true":"false"),s.append("enable-duplicate-filtering",this.getDuplicateFiltering(e)),s.append("deployment-source",e.deploymentSource?e.deploymentSource:"Dante Cloud UI");const n=e.deploymentActivationTime?e.deploymentActivationTime:new Date;s.append("deployment-activation-time",t.moment(n).utc().format()),e.tenantId&&s.append("tenant-id",e.tenantId);let r=new Blob([e.resource],{type:"application/octet-stream"});return s.append("data",r,e.deploymentName),this.getConfig().getHttp().post(this.getCreateAddress(),s,{contentType:t.ContentTypeEnum.MULTI_PART})}redeploy(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"redeploy"),t)}getResources(e){return this.getConfig().getHttp().get(this.createAddressById(e,"resources"))}getResource(e,t){return this.getConfig().getHttp().get(this.createAddressByRelation(e,t,"resources"))}getBinaryResource(e,t){const s=this.createAddressByRelation(e,t,"resources")+"/data";return this.getConfig().getHttp().get(s)}getRegisteredDeployments(){const e=this.getBaseAddress()+"/registered";return this.getConfig().getHttp().get(e)}};let n=s;__publicField(n,"instance");const r=class extends BpmnQueryService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new r(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/process-definition"}getActivityInstanceStatistics(e,t){return this.getConfig().getHttp().get(this.createAddressByParam(e,"statistics"),t)}getStaticCalledProcessDefinitions(e){return this.getConfig().getHttp().get(this.createAddressById(e,"static-called-process-definitions"))}getDiagram(e){return this.getConfig().getHttp().get(this.createAddressByParam(e,"diagram"))}getStartFormVariables(e,t){return this.getConfig().getHttp().get(this.createAddressByParam(e,"form-variables"),t)}getRenderedFormStartForm(e){return this.getConfig().getHttp().get(this.createAddressByParam(e,"rendered-form"))}getStartFormKey(e){return this.getConfig().getHttp().get(this.createAddressByParam(e,"startForm"))}getProcessInstanceStatistics(e){const t=this.getBaseAddress()+"/statistics";return this.getConfig().getHttp().get(t,e)}getXml(e){return this.getConfig().getHttp().get(this.createAddressByParam(e,"xml"))}getByPathParams(e){return this.getConfig().getHttp().get(this.createAddressByParam(e))}start(e,t){return this.getConfig().getHttp().post(this.createAddressByParam(e,"start"),t)}submitStartForm(e,t){return this.getConfig().getHttp().post(this.createAddressByParam(e,"submit-form"),t)}activateOrSuspendById(e,t){return this.getConfig().getHttp().put(this.createAddressByParam(e,"suspended"),t)}activateOrSuspendByKey(e){const t=this.getBaseAddress()+"/suspended";return this.getConfig().getHttp().put(t,e)}updateHistoryTimeToLive(e,t){return this.getConfig().getHttp().put(this.createAddressByParam(e,"history-time-to-live"),t)}deleteByKey(e,t="",s){return this.getConfig().getHttp().deleteWithParams(this.createAddressByParam({key:e,tenantId:t},"delete"),s)}getDeployedStartForm(e){return this.getConfig().getHttp().get(this.createAddressByParam(e,"deployed-start-form"))}restartProcessInstance(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"restart"),t)}restartAsync(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"restart-async"),t)}};let i=r;__publicField(i,"instance");const a=class extends BaseBpmnService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new a(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/process-instance"}getActivityInstance(e){return this.getConfig().getHttp().get(this.createAddressById(e,"activity-instances"))}modify(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"modification"),t)}modifyAsync(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"modification-async"),t)}deleteAsync(e){const t=this.getBaseAddress()+"/delete";return this.getConfig().getHttp().post(t,e)}deleteAsyncHistoricQueryBased(e){const t=this.getBaseAddress()+"/delete-historic-query-based";return this.getConfig().getHttp().post(t,e)}setJobRetriesAsync(e){const t=this.getBaseAddress()+"/job-retries";return this.getConfig().getHttp().post(t,e)}setJobRetriesAsyncHistoricQueryBased(e){const t=this.getBaseAddress()+"/job-retries-historic-query-based";return this.getConfig().getHttp().post(t,e)}setVariablesAsync(e){const t=this.getBaseAddress()+"variables-async";return this.getConfig().getHttp().post(t,e)}correlateMessageAsync(e){const t=this.getBaseAddress()+"message-async";return this.getConfig().getHttp().post(t,e)}activateOrSuspendById(e,t){return this.getConfig().getHttp().put(this.createAddressById(e,"suspended"),t)}activateOrSuspendByProcessDefinitionId(e){const t=this.getBaseAddress()+"/suspended";return this.getConfig().getHttp().put(t,e)}activateOrSuspendByProcessDefinitionKey(e){const t=this.getBaseAddress()+"/suspended";return this.getConfig().getHttp().put(t,e)}activateOrSuspendInGroup(e){const t=this.getBaseAddress()+"suspended-async";return this.getConfig().getHttp().post(t,e)}activateOrSuspendInBatch(e){const t=this.getBaseAddress()+"suspended-async";return this.getConfig().getHttp().post(t,e)}};let d=a;__publicField(d,"instance");const c=class extends BaseBpmnService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new c(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/task"}getCreateAddress(){return this.getBaseAddress()+"/create"}getFormKey(e){return this.getConfig().getHttp().get(this.createAddressById(e,"form"))}claim(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"claim"),t)}unclaim(e){return this.getConfig().getHttp().post(this.createAddressById(e,"unclaim"),{})}complete(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"complete"),t)}submitForm(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"submit-form"),t)}resolve(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"resolve"),t)}setAssignee(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"assignee"),t)}delegate(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"delegate"),t)}getDeployedForm(e){return this.getConfig().getHttp().get(this.createAddressById(e,"deployed-form"))}getRenderedForm(e){return this.getConfig().getHttp().get(this.createAddressById(e,"rendered-form"))}getTaskFormVariables(e,t){return this.getConfig().getHttp().get(this.createAddressById(e,"form-variables"),t)}create(e){return this.getConfig().getHttp().post(this.getCreateAddress(),e)}update(e,t){return this.getConfig().getHttp().put(this.createAddressById(e),t)}handleBpmnError(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"bpmnError"),t)}handleBpmnEscalation(e,t){return this.getConfig().getHttp().post(this.createAddressById(e,"bpmnEscalation"),t)}};let o=c;__publicField(o,"instance");const g=class extends BpmnQueryByPostService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new g(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/activity-instance"}};let u=g;__publicField(u,"instance");const h=class extends BpmnQueryByPostService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new h(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/process-instance"}};let p=h;__publicField(p,"instance");const l=class extends BpmnQueryByPostService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new l(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/task"}};let m=l;__publicField(m,"instance");const y=class extends BaseBpmnService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new y(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/group"}getCreateAddress(){return this.getBaseAddress()+"/create"}create(e){return this.getConfig().getHttp().post(this.getCreateAddress(),e)}update(e,t){return this.getConfig().getHttp().put(this.createAddressById(e),t)}};let B=y;__publicField(B,"instance");const f=class extends BpmnService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new f(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/group"}getRelationAddress(e,t=""){return this.createAddressByRelation(e,t,"members")}create(e,t){return this.getConfig().getHttp().put(this.getRelationAddress(e,t),"")}deleteByRelation(e,t){return this.getConfig().getHttp().delete(this.getRelationAddress(e,t))}};let A=f;__publicField(A,"instance");const C=class extends BpmnQueryService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new C(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/tenant"}getCreateAddress(){return this.getBaseAddress()+"/create"}createTenant(e){return this.getConfig().getHttp().post(this.getCreateAddress(),e)}update(e,t){return this.getConfig().getHttp().put(this.createAddressById(e),t)}};let P=C;__publicField(P,"instance");const I=class extends BpmnService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new I(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/tenant"}getRelationAddress(e,t=""){return this.createAddressByRelation(e,t,"user-members")}create(e,t){return this.getConfig().getHttp().put(this.getRelationAddress(e,t),"")}deleteByRelation(e,t){return this.getConfig().getHttp().delete(this.getRelationAddress(e,t))}};let b=I;__publicField(b,"instance");const H=class extends BpmnService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new H(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/tenant"}getRelationAddress(e,t=""){return this.createAddressByRelation(e,t,"group-members")}create(e,t){return this.getConfig().getHttp().put(this.getRelationAddress(e,t),"")}deleteByRelation(e,t){return this.getConfig().getHttp().delete(this.getRelationAddress(e,t))}};let S=H;__publicField(S,"instance");const v=class extends BpmnQueryByGetService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new v(e)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/user"}getCreateAddress(){return this.getBaseAddress()+"/create"}};let _=v;__publicField(_,"instance");const F=class{constructor(e){__publicField(this,"config",{}),this.config=e}static getInstance(e){return null==this.instance&&(this.instance=new F(e)),this.instance}getConfig(){return this.config}deployment(){return n.getInstance(this.config)}processDefinition(){return i.getInstance(this.config)}processInstance(){return d.getInstance(this.config)}task(){return o.getInstance(this.config)}historyActivityInstance(){return u.getInstance(this.config)}historyProcessInstance(){return p.getInstance(this.config)}historyTask(){return m.getInstance(this.config)}group(){return B.getInstance(this.config)}groupMember(){return A.getInstance(this.config)}tenant(){return P.getInstance(this.config)}tenantUser(){return b.getInstance(this.config)}tenantGroup(){return S.getInstance(this.config)}user(){return _.getInstance(this.config)}};let R=F;__publicField(R,"instance");Object.defineProperty(e,"Axios",{enumerable:!0,get:()=>t.Axios}),Object.defineProperty(e,"ContentTypeEnum",{enumerable:!0,get:()=>t.ContentTypeEnum}),Object.defineProperty(e,"HttpConfig",{enumerable:!0,get:()=>t.HttpConfig}),Object.defineProperty(e,"Service",{enumerable:!0,get:()=>t.Service}),Object.defineProperty(e,"lodash",{enumerable:!0,get:()=>t.lodash}),Object.defineProperty(e,"moment",{enumerable:!0,get:()=>t.moment}),e.BaseBpmnService=BaseBpmnService,e.BpmnQueryByGetService=BpmnQueryByGetService,e.BpmnQueryByPostService=BpmnQueryByPostService,e.BpmnQueryService=BpmnQueryService,e.BpmnService=BpmnService,e.DeploymentService=n,e.GroupMemberService=A,e.GroupService=B,e.HistoryActivityInstanceService=u,e.HistoryProcessInstanceService=p,e.HistoryTaskService=m,e.ProcessDefinitionService=i,e.ProcessInstanceService=d,e.RelationPathParamBuilder=RelationPathParamBuilder,e.TaskService=o,e.TenantGroupService=S,e.TenantService=P,e.TenantUserService=b,e.UnionPathParamBuilder=UnionPathParamBuilder,e.UserService=_,e.createBpmnApi=(e,s,n,r)=>{const i=new t.HttpConfig(e,s,n,r);return R.getInstance(i)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
