!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@herodotus/core")):"function"==typeof define&&define.amd?define(["exports","@herodotus/core"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["@herodotus/bpmn-apis"]={},t.HerodotusCore)}(this,(function(t,e){"use strict";var s=Object.defineProperty,n=(t,e,n)=>(((t,e,n)=>{e in t?s(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n})(t,"symbol"!=typeof e?e+"":e,n),n);class PathParamBuilder{constructor(t){n(this,"address"),n(this,"action",""),this.address=t}getWellFormedAddress(){let t=this.address;return e.lodash.endsWith(t,"/")?e.lodash.trimEnd(t,"/"):t}addAction(t){this.action=t}appendAction(t){return this.action?t+"/"+this.action:t}}class UnionPathParamBuilder extends PathParamBuilder{constructor(t){super(t),n(this,"id",""),n(this,"key",""),n(this,"tenantId","")}setAction(t){return this.addAction(t),this}withParam(t){return this.id=t.id,this.key=t.key,this.tenantId=t.tenantId,this}build(){let t=this.getWellFormedAddress();return this.id?t+="/"+this.id:(this.key&&(t+="/key/"+this.key),this.tenantId&&(t+="/tenant-id/"+this.tenantId)),this.appendAction(t)}}class RelationPathParamBuilder extends PathParamBuilder{constructor(t){super(t),n(this,"id",""),n(this,"relationId","")}withParam(t){return this.id=t.id,this.relationId=t.relationId,this.addAction(t.action),this}build(){let t=this.getWellFormedAddress();return t+="/"+this.id,t=this.appendAction(t),t+="/"+this.relationId,t}}class BpmnService extends e.Service{getCountAddress(){return this.getBaseAddress()+"/count"}createAddressByParam(t,e=""){let s=new UnionPathParamBuilder(this.getBaseAddress());return e?s.withParam(t).setAction(e).build():s.withParam(t).build()}createAddressByRelation(t,e,s){return new RelationPathParamBuilder(this.getBaseAddress()).withParam({id:t,relationId:e,action:s}).build()}createAddressById(t,e=""){return this.createAddressByParam({id:t},e)}delete(t,s={}){return e.lodash.isEmpty(s)?this.getConfig().getHttp().delete(this.createAddressById(t)):this.getConfig().getHttp().deleteWithParams(this.createAddressById(t),s)}}class BpmnQueryByGetService extends BpmnService{getCount(t={}){return new Promise(((e,s)=>{this.getConfig().getHttp().get(this.getCountAddress(),t).then((t=>{if(t){e(t.count)}})).catch((t=>{s(t)}))}))}getList(t,e,s={}){const n=Object.assign(s,{sortBy:t.sortBy,sortOrder:t.sortOrder,firstResult:(t.pageNumber-1)*t.pageSize,maxResults:t.pageSize});return new Promise(((s,r)=>{this.getConfig().getHttp().get(this.getBaseAddress(),n).then((n=>{const r={content:n,totalPages:e?(e+t.pageSize-1)/t.pageSize:e,totalElements:String(e)};s(r)})).catch((t=>{r(t)}))}))}getByPage(t,e={}){return new Promise(((s,n)=>{this.getCount(e).then((n=>{this.getList(t,n,e).then((t=>{s(t)}))})).catch((t=>{n(t)}))}))}getAll(t,e={}){return new Promise(((s,n)=>{this.getCount(e).then((n=>{const r=Object.assign(e,{sortBy:t.sortBy,sortOrder:t.sortOrder,firstResult:0,maxResults:n});this.getConfig().getHttp().get(this.getBaseAddress(),r).then((t=>{s(t)}))})).catch((t=>{n(t)}))}))}}class BpmnQueryService extends BpmnQueryByGetService{get(t){return this.getConfig().getHttp().get(this.createAddressById(t))}}class BpmnQueryByPostService extends BpmnQueryService{getPostCount(t={}){return new Promise(((e,s)=>{this.getConfig().getHttp().get(this.getCountAddress(),t).then((t=>{if(t){e(t.count)}})).catch((t=>{s(t)}))}))}getPostList(t,s,n=[],r={}){const i={firstResult:(t.pageNumber-1)*t.pageSize,maxResults:t.pageSize};let a={};return e.lodash.isEmpty(n)||(a=Object.assign(r,{sorting:n})),new Promise(((e,n)=>{this.getConfig().getHttp().postWithParams(this.getBaseAddress(),i,a).then((n=>{const r={content:n,totalPages:s?(s+t.pageSize-1)/t.pageSize:s,totalElements:String(s)};e(r)})).catch((t=>{n(t)}))}))}getPostByPage(t,e=[],s={}){return new Promise(((n,r)=>{this.getPostCount(s).then((r=>{this.getPostList(t,r,e,s).then((t=>{n(t)}))})).catch((t=>{r(t)}))}))}}class BaseBpmnService extends BpmnQueryByPostService{}const r=class extends BpmnQueryService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new r(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/deployment"}getCreateAddress(){return this.getBaseAddress()+"/create"}getDuplicateFiltering(t){return t.deployChangedOnly?"true":t.enableDuplicateFiltering?String(t.enableDuplicateFiltering):"false"}create(t){let s=new FormData;s.append("deployment-name",t.deploymentName),s.append("deploy-changed-only",t.deployChangedOnly?"true":"false"),s.append("enable-duplicate-filtering",this.getDuplicateFiltering(t)),s.append("deployment-source",t.deploymentSource?t.deploymentSource:"Dante Cloud UI");const n=t.deploymentActivationTime?t.deploymentActivationTime:new Date;s.append("deployment-activation-time",e.moment(n).utc().format()),t.tenantId&&s.append("tenant-id",t.tenantId);let r=new Blob([t.resource],{type:"application/octet-stream"});return s.append("data",r,t.deploymentName),this.getConfig().getHttp().post(this.getCreateAddress(),s,{contentType:e.ContentTypeEnum.MULTI_PART})}redeploy(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"redeploy"),e)}getResources(t){return this.getConfig().getHttp().get(this.createAddressById(t,"resources"))}getResource(t,e){return this.getConfig().getHttp().get(this.createAddressByRelation(t,e,"resources"))}getBinaryResource(t,e){const s=this.createAddressByRelation(t,e,"resources")+"/data";return this.getConfig().getHttp().get(s)}getRegisteredDeployments(){const t=this.getBaseAddress()+"/registered";return this.getConfig().getHttp().get(t)}};let i=r;n(i,"instance");const a=class extends BpmnQueryService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new a(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/process-definition"}getActivityInstanceStatistics(t,e){return this.getConfig().getHttp().get(this.createAddressByParam(t,"statistics"),e)}getStaticCalledProcessDefinitions(t){return this.getConfig().getHttp().get(this.createAddressById(t,"static-called-process-definitions"))}getDiagram(t){return this.getConfig().getHttp().get(this.createAddressByParam(t,"diagram"))}getStartFormVariables(t,e){return this.getConfig().getHttp().get(this.createAddressByParam(t,"form-variables"),e)}getRenderedFormStartForm(t){return this.getConfig().getHttp().get(this.createAddressByParam(t,"rendered-form"))}getStartFormKey(t){return this.getConfig().getHttp().get(this.createAddressByParam(t,"startForm"))}getProcessInstanceStatistics(t){const e=this.getBaseAddress()+"/statistics";return this.getConfig().getHttp().get(e,t)}getXml(t){return this.getConfig().getHttp().get(this.createAddressByParam(t,"xml"))}getByPathParams(t){return this.getConfig().getHttp().get(this.createAddressByParam(t))}start(t,e){return this.getConfig().getHttp().post(this.createAddressByParam(t,"start"),e)}submitStartForm(t,e){return this.getConfig().getHttp().post(this.createAddressByParam(t,"submit-form"),e)}activateOrSuspendById(t,e){return this.getConfig().getHttp().put(this.createAddressByParam(t,"suspended"),e)}activateOrSuspendByKey(t){const e=this.getBaseAddress()+"/suspended";return this.getConfig().getHttp().put(e,t)}updateHistoryTimeToLive(t,e){return this.getConfig().getHttp().put(this.createAddressByParam(t,"history-time-to-live"),e)}deleteByKey(t,e="",s){return this.getConfig().getHttp().deleteWithParams(this.createAddressByParam({key:t,tenantId:e},"delete"),s)}getDeployedStartForm(t){return this.getConfig().getHttp().get(this.createAddressByParam(t,"deployed-start-form"))}restartProcessInstance(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"restart"),e)}restartAsync(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"restart-async"),e)}};let o=a;n(o,"instance");const g=class extends BaseBpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new g(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/process-instance"}getActivityInstance(t){return this.getConfig().getHttp().get(this.createAddressById(t,"activity-instances"))}modify(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"modification"),e)}modifyAsync(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"modification-async"),e)}deleteAsync(t){const e=this.getBaseAddress()+"/delete";return this.getConfig().getHttp().post(e,t)}deleteAsyncHistoricQueryBased(t){const e=this.getBaseAddress()+"/delete-historic-query-based";return this.getConfig().getHttp().post(e,t)}setJobRetriesAsync(t){const e=this.getBaseAddress()+"/job-retries";return this.getConfig().getHttp().post(e,t)}setJobRetriesAsyncHistoricQueryBased(t){const e=this.getBaseAddress()+"/job-retries-historic-query-based";return this.getConfig().getHttp().post(e,t)}setVariablesAsync(t){const e=this.getBaseAddress()+"variables-async";return this.getConfig().getHttp().post(e,t)}correlateMessageAsync(t){const e=this.getBaseAddress()+"message-async";return this.getConfig().getHttp().post(e,t)}activateOrSuspendById(t,e){return this.getConfig().getHttp().put(this.createAddressById(t,"suspended"),e)}activateOrSuspendByProcessDefinitionId(t){const e=this.getBaseAddress()+"/suspended";return this.getConfig().getHttp().put(e,t)}activateOrSuspendByProcessDefinitionKey(t){const e=this.getBaseAddress()+"/suspended";return this.getConfig().getHttp().put(e,t)}activateOrSuspendInGroup(t){const e=this.getBaseAddress()+"suspended-async";return this.getConfig().getHttp().post(e,t)}activateOrSuspendInBatch(t){const e=this.getBaseAddress()+"suspended-async";return this.getConfig().getHttp().post(e,t)}};let d=g;n(d,"instance");const c=class extends BaseBpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new c(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/task"}getCreateAddress(){return this.getBaseAddress()+"/create"}getFormKey(t){return this.getConfig().getHttp().get(this.createAddressById(t,"form"))}claim(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"claim"),e)}unclaim(t){return this.getConfig().getHttp().post(this.createAddressById(t,"unclaim"),{})}complete(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"complete"),e)}submitForm(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"submit-form"),e)}resolve(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"resolve"),e)}setAssignee(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"assignee"),e)}delegate(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"delegate"),e)}getDeployedForm(t){return this.getConfig().getHttp().get(this.createAddressById(t,"deployed-form"))}getRenderedForm(t){return this.getConfig().getHttp().get(this.createAddressById(t,"rendered-form"))}getTaskFormVariables(t,e){return this.getConfig().getHttp().get(this.createAddressById(t,"form-variables"),e)}create(t){return this.getConfig().getHttp().post(this.getCreateAddress(),t)}update(t,e){return this.getConfig().getHttp().put(this.createAddressById(t),e)}handleBpmnError(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"bpmnError"),e)}handleBpmnEscalation(t,e){return this.getConfig().getHttp().post(this.createAddressById(t,"bpmnEscalation"),e)}};let u=c;n(u,"instance");const h=class extends BpmnQueryByPostService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new h(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/activity-instance"}};let p=h;n(p,"instance");const l=class extends BpmnQueryByPostService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new l(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/process-instance"}};let m=l;n(m,"instance");const y=class extends BpmnQueryByPostService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new y(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/history/task"}};let B=y;n(B,"instance");const f=class extends BaseBpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new f(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/group"}getCreateAddress(){return this.getBaseAddress()+"/create"}create(t){return this.getConfig().getHttp().post(this.getCreateAddress(),t)}update(t,e){return this.getConfig().getHttp().put(this.createAddressById(t),e)}};let A=f;n(A,"instance");const C=class extends BpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new C(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/group"}getRelationAddress(t,e=""){return this.createAddressByRelation(t,e,"members")}create(t,e){return this.getConfig().getHttp().put(this.getRelationAddress(t,e),"")}deleteByRelation(t,e){return this.getConfig().getHttp().delete(this.getRelationAddress(t,e))}};let P=C;n(P,"instance");const I=class extends BpmnQueryService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new I(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/tenant"}getCreateAddress(){return this.getBaseAddress()+"/create"}createTenant(t){return this.getConfig().getHttp().post(this.getCreateAddress(),t)}update(t,e){return this.getConfig().getHttp().put(this.createAddressById(t),e)}};let H=I;n(H,"instance");const S=class extends BpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new S(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/tenant"}getRelationAddress(t,e=""){return this.createAddressByRelation(t,e,"user-members")}create(t,e){return this.getConfig().getHttp().put(this.getRelationAddress(t,e),"")}deleteByRelation(t,e){return this.getConfig().getHttp().delete(this.getRelationAddress(t,e))}};let v=S;n(v,"instance");const b=class extends BpmnService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new b(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/tenant"}getRelationAddress(t,e=""){return this.createAddressByRelation(t,e,"group-members")}create(t,e){return this.getConfig().getHttp().put(this.getRelationAddress(t,e),"")}deleteByRelation(t,e){return this.getConfig().getHttp().delete(this.getRelationAddress(t,e))}};let R=b;n(R,"instance");const w=class extends BpmnQueryByGetService{constructor(t){super(t)}static getInstance(t){return null==this.instance&&(this.instance=new w(t)),this.instance}getBaseAddress(){return this.getConfig().getBpmn()+"/user"}getCreateAddress(){return this.getBaseAddress()+"/create"}};let x=w;n(x,"instance");const O=class{constructor(t){n(this,"config",{}),this.config=t}static getInstance(t){return null==this.instance&&(this.instance=new O(t)),this.instance}getConfig(){return this.config}deployment(){return i.getInstance(this.config)}processDefinition(){return o.getInstance(this.config)}processInstance(){return d.getInstance(this.config)}task(){return u.getInstance(this.config)}historyActivityInstance(){return p.getInstance(this.config)}historyProcessInstance(){return m.getInstance(this.config)}historyTask(){return B.getInstance(this.config)}group(){return A.getInstance(this.config)}groupMember(){return P.getInstance(this.config)}tenant(){return H.getInstance(this.config)}tenantUser(){return v.getInstance(this.config)}tenantGroup(){return R.getInstance(this.config)}user(){return x.getInstance(this.config)}};let Q=O;n(Q,"instance");Object.defineProperty(t,"Axios",{enumerable:!0,get:()=>e.Axios}),Object.defineProperty(t,"ContentTypeEnum",{enumerable:!0,get:()=>e.ContentTypeEnum}),Object.defineProperty(t,"HttpConfig",{enumerable:!0,get:()=>e.HttpConfig}),Object.defineProperty(t,"Service",{enumerable:!0,get:()=>e.Service}),Object.defineProperty(t,"lodash",{enumerable:!0,get:()=>e.lodash}),Object.defineProperty(t,"moment",{enumerable:!0,get:()=>e.moment}),t.BaseBpmnService=BaseBpmnService,t.BpmnQueryByGetService=BpmnQueryByGetService,t.BpmnQueryByPostService=BpmnQueryByPostService,t.BpmnQueryService=BpmnQueryService,t.BpmnService=BpmnService,t.DeploymentService=i,t.GroupMemberService=P,t.GroupService=A,t.HistoryActivityInstanceService=p,t.HistoryProcessInstanceService=m,t.HistoryTaskService=B,t.ProcessDefinitionService=o,t.ProcessInstanceService=d,t.RelationPathParamBuilder=RelationPathParamBuilder,t.TaskService=u,t.TenantGroupService=R,t.TenantService=H,t.TenantUserService=v,t.UnionPathParamBuilder=UnionPathParamBuilder,t.UserService=x,t.createBpmnApi=(t,s,n,r)=>{const i=new e.HttpConfig(t,s,n,r);return Q.getInstance(i)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
