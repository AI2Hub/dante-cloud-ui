!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@herodotus/core")):"function"==typeof define&&define.amd?define(["exports","@herodotus/core"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["@herodotus/oss-apis"]={},e.HerodotusCore)}(this,(function(e,t){"use strict";var s=Object.defineProperty,n=(e,t,n)=>(((e,t,n)=>{t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n);const i=class _OssConstantService extends t.BaseService{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _OssConstantService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/constant/enums"}};n(i,"instance");let r=i;const c=class _BucketService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _BucketService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/bucket"}getListAddress(){return this.getBaseAddress()+"/list"}getExistsAddress(){return this.getBaseAddress()+"/exists"}getExistsPath(e){return this.getParamPath(this.getExistsAddress(),e)}doesBucketExist(e){return this.getConfig().getHttp().get(this.getExistsPath(e))}listBuckets(){return this.getConfig().getHttp().get(this.getListAddress())}};n(c,"instance");let o=c;const g=class _MinioBucketService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioBucketService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket"}make(e){return this.getConfig().getHttp().post(this.getBaseAddress(),e)}remove(e){return this.getConfig().getHttp().delete(this.getBaseAddress(),e)}};n(g,"instance");let a=g;const u=class _MinioBucketSettingService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioBucketSettingService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket/setting"}get(e,t=""){return this.getConfig().getHttp().get(this.getBaseAddress(),{bucketName:e,region:t})}};n(u,"instance");let d=u;const h=class _MinioChunkUploadService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioChunkUploadService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/chunk"}getChunkUploadCreateAddress(){return this.getBaseAddress()+"/create"}getChunkUploadCompleteAddress(){return this.getBaseAddress()+"/complete"}createChunkUpload(e){return this.getConfig().getHttp().post(this.getChunkUploadCreateAddress(),e)}completeChunkUpload(e){return this.getConfig().getHttp().post(this.getChunkUploadCompleteAddress(),e)}};n(h,"instance");let l=h;const p=class _MinioBucketEncryptionService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioBucketEncryptionService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket/encryption"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}delete(e){return this.getConfig().getHttp().delete(this.getBaseAddress(),e)}};n(p,"instance");let f=p;const S=class _MinioBucketPolicyService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioBucketPolicyService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket/policy"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}delete(e){return this.getConfig().getHttp().delete(this.getBaseAddress(),e)}};n(S,"instance");let B=S;const b=class _MinioBucketTagsService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioBucketTagsService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket/tags"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}delete(e){return this.getConfig().getHttp().delete(this.getBaseAddress(),e)}};n(b,"instance");let v=b;const C=class _MinioBucketQuotaService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioBucketQuotaService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket/quota"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}};n(C,"instance");let A=C;const k=class _MinioBucketVersioningService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioBucketVersioningService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket/versioning"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}};n(k,"instance");let m=k;const O=class _MinioObjectLockConfigurationService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioObjectLockConfigurationService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/bucket/object-lock"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}delete(e){return this.getConfig().getHttp().delete(this.getBaseAddress(),e)}};n(O,"instance");let M=O;const j=class _MinioObjectService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioObjectService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/object"}getListAddress(){return this.getBaseAddress()+"/list"}getMultiDeleteAddress(){return this.getBaseAddress()+"/multi"}list(e){return this.getConfig().getHttp().get(this.getListAddress(),e)}delete(e){return this.getConfig().getHttp().delete(this.getBaseAddress(),e)}batchDelete(e){return this.getConfig().getHttp().delete(this.getMultiDeleteAddress(),e)}};n(j,"instance");let H=j;const I=class _MinioObjectStreamService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioObjectStreamService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/object/stream"}getDownloadAddress(){return this.getBaseAddress()+"/download"}getUploadAddress(){return this.getBaseAddress()+"/upload"}download(e){return this.getConfig().getHttp().post(this.getDownloadAddress(),e,{contentType:t.ContentTypeEnum.JSON},{responseType:"blob"})}upload(e,t){return this.getConfig().getHttp().post(this.getDownloadAddress(),{bucketName:e,file:t})}};n(I,"instance");let _=I;const x=class _MinioObjectSettingService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioObjectSettingService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/object/setting"}get(e,t){return this.getConfig().getHttp().get(this.getBaseAddress(),{bucketName:e,objectName:t})}};n(x,"instance");let y=x;const w=class _MinioObjectTagsService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioObjectTagsService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/object/tags"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}delete(e){return this.getConfig().getHttp().delete(this.getBaseAddress(),e)}};n(w,"instance");let P=w;const T=class _MinioObjectRetentionService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioObjectRetentionService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/object/retention"}set(e){return this.getConfig().getHttp().put(this.getBaseAddress(),e)}};n(T,"instance");let E=T;const L=class _MinioObjectLegalHoldService extends t.Service{constructor(e){super(e)}static getInstance(e){return null==this.instance&&(this.instance=new _MinioObjectLegalHoldService(e)),this.instance}getBaseAddress(){return this.getConfig().getOss()+"/oss/minio/object/legal-hold"}getEnableAddress(){return this.getBaseAddress()+"/enable"}getDisableAddress(){return this.getBaseAddress()+"/disable"}enable(e){return this.getConfig().getHttp().put(this.getEnableAddress(),e)}disable(e){return this.getConfig().getHttp().put(this.getDisableAddress(),e)}};n(L,"instance");let U=L;const D=class _OssApiResources{constructor(e){n(this,"config",{}),this.config=e}static getInstance(e){return null==this.instance&&(this.instance=new _OssApiResources(e)),this.instance}getConfig(){return this.config}bucket(){return o.getInstance(this.config)}constant(){return r.getInstance(this.config)}minioBucket(){return a.getInstance(this.config)}minioBucketSetting(){return d.getInstance(this.config)}minioChunk(){return l.getInstance(this.config)}minioBucketEncryption(){return f.getInstance(this.config)}minioBucketPolicy(){return B.getInstance(this.config)}minioBucketTags(){return v.getInstance(this.config)}minioBucketQuota(){return A.getInstance(this.config)}minioBucketVersioning(){return m.getInstance(this.config)}minioObjectLock(){return M.getInstance(this.config)}minioObject(){return H.getInstance(this.config)}minioObjectStream(){return _.getInstance(this.config)}minioObjectSetting(){return y.getInstance(this.config)}minioObjectTags(){return P.getInstance(this.config)}minioObjectRetention(){return E.getInstance(this.config)}minioObjectLegalHold(){return U.getInstance(this.config)}};n(D,"instance");let R=D;Object.defineProperty(e,"Axios",{enumerable:!0,get:()=>t.Axios}),Object.defineProperty(e,"BaseService",{enumerable:!0,get:()=>t.BaseService}),Object.defineProperty(e,"HttpConfig",{enumerable:!0,get:()=>t.HttpConfig}),Object.defineProperty(e,"Service",{enumerable:!0,get:()=>t.Service}),e.BucketService=o,e.MinioBucketEncryptionService=f,e.MinioBucketPolicyService=B,e.MinioBucketQuotaService=A,e.MinioBucketService=a,e.MinioBucketSettingService=d,e.MinioBucketTagsService=v,e.MinioBucketVersioningService=m,e.MinioChunkUploadService=l,e.MinioObjectLegalHoldService=U,e.MinioObjectLockConfigurationService=M,e.MinioObjectRetentionService=E,e.MinioObjectService=H,e.MinioObjectSettingService=y,e.MinioObjectStreamService=_,e.MinioObjectTagsService=P,e.OssConstantService=r,e.createOssApi=(e,s,n,i)=>{const r=new t.HttpConfig(e,s,n,i);return R.getInstance(r)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
