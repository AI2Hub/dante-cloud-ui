{"version":3,"file":"index.min.js","sources":["../src/plugins/vuetify.ts","../src/plugins/vee-validate.ts","../src/plugins/hecate.ts"],"sourcesContent":["import Vue from 'vue';\r\nimport Vuetify from 'vuetify/lib/framework';\r\nimport VueI18n from 'vue-i18n';\r\nimport 'roboto-fontface/css/roboto/roboto-fontface.css';\r\nimport '@mdi/font/css/materialdesignicons.css';\r\nimport 'material-design-icons-iconfont/dist/material-design-icons.css';\r\nimport { localize } from '@hecate/utils';\r\n\r\nVue.use(Vuetify);\r\nVue.use(VueI18n);\r\n\r\nconst { en, zh } = localize;\r\n\r\nconst i18n = new VueI18n({\r\n    locale: 'zh',\r\n    messages: { zh, en },\r\n});\r\n\r\nexport default new Vuetify({\r\n    lang: {\r\n        t: (key, ...params) => i18n.t(key, params).toString(),\r\n    },\r\n});\r\n","import Vue from 'vue';\r\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode, localize } from 'vee-validate';\r\nimport * as Rules from 'vee-validate/dist/rules';\r\nimport { library } from '@hecate/utils';\r\n\r\ninterface ValidateLocaleMessage {\r\n    [key: string]: string;\r\n}\r\n\r\ninterface ValidateLocale {\r\n    code: string;\r\n    messages: ValidateLocaleMessage;\r\n}\r\n\r\nconst CN: ValidateLocale = {\r\n    code: 'zh_CN',\r\n    messages: {\r\n        alpha: '{_field_} 只能包含字母',\r\n        alpha_dash: '{_field_} 只能包含字母数字字符、破折号和下划线',\r\n        alpha_num: '{_field_}只能包含字母数字字符',\r\n        alpha_spaces: '{_field_}只能包含字母字符和空格',\r\n        between: '{_field_}必须在{min}与{max}之间',\r\n        confirmed: '{_field_}不能和{target}匹配',\r\n        digits: '{_field_}必须是数字，且精确到{length}位数',\r\n        dimensions: '{_field_}必须在{width}像素与{height}像素之间',\r\n        email: '{_field_} 不是一个有效的邮箱地址',\r\n        excluded: '{_field_}不是一个有效值',\r\n        ext: '{_field_}不是一个有效的文件',\r\n        image: '{_field_}不是一张有效的图片',\r\n        oneOf: '{_field_}不是一个有效值',\r\n        integer: '{_field_}必须是整数',\r\n        length: '{_field_}长度必须为{length}',\r\n        max: '{_field_}不能超过{length}个字符',\r\n        max_value: '{_field_}必须小于或等于{max}',\r\n        mimes: '{_field_}不是一个有效的文件类型',\r\n        min: '{_field_}必须至少有{length}个字符',\r\n        min_value: '{_field_}必须大于或等于{min}',\r\n        numeric: '{_field_}只能包含数字字符',\r\n        regex: '{_field_}格式无效',\r\n        required: '{_field_} 不能为空',\r\n        required_if: '{_field_} 是必须的',\r\n        size: '{_field_}必须小于{size}KB',\r\n        double: '{_field_}字段必须为有效的小数',\r\n    },\r\n};\r\n\r\nconst excludeExtends: string[] = ['dimensions', 'oneOf', 'required_if'];\r\n\r\nsetInteractionMode('eager');\r\n\r\ninterface RuleItem {\r\n    name: string;\r\n    type: string;\r\n    message: string;\r\n}\r\n\r\ntype RuleType = RuleItem | undefined;\r\n\r\nconst ruleItems: RuleType[] = (Object.keys(Rules) as Array<keyof typeof Rules>).map((rule: string) => {\r\n    if (!excludeExtends.includes(rule)) {\r\n        const message: string = CN.messages[rule];\r\n        extend(rule, {\r\n            ...Rules[rule],\r\n            message,\r\n        });\r\n        return {\r\n            name: library.lodash.startCase(rule),\r\n            type: rule,\r\n            message: message,\r\n        };\r\n    }\r\n});\r\n\r\nlocalize('zh_CN', CN);\r\n\r\nconst VeeValidate = {\r\n    install(_Vue: typeof Vue): void {\r\n        _Vue.prototype.$rules = ruleItems;\r\n        _Vue.component('ValidationProvider', ValidationProvider);\r\n        _Vue.component('ValidationObserver', ValidationObserver);\r\n    },\r\n};\r\n\r\nexport default VeeValidate;\r\n","import Draggable from 'vuedraggable';\r\nimport _Vue from 'vue';\r\n\r\nimport { library } from '@hecate/utils';\r\n\r\nconst HecatePlugins = {\r\n    install(Vue: typeof _Vue): void {\r\n        Vue.prototype.$lib = library;\r\n        Vue.prototype.$notify = library._notify;\r\n        Vue.component('draggable', Draggable);\r\n    },\r\n};\r\n\r\nexport default HecatePlugins;\r\n"],"names":["Vue","use","Vuetify","VueI18n","en","localize","zh","i18n","locale","messages","vuetify","lang","t","key","params","toString","CN","code","alpha","alpha_dash","alpha_num","alpha_spaces","between","confirmed","digits","dimensions","email","excluded","ext","image","oneOf","integer","length","max","max_value","mimes","min","min_value","numeric","regex","required","required_if","size","double","excludeExtends","veeValidate","setInteractionMode","const","ruleItems","Object","keys","Rules","map","rule","includes","type","message","VeeValidate","install","_Vue","prototype","$rules","component","ValidationProvider","ValidationObserver","HecatePlugins","$lib","library","Draggable"],"mappings":"ocAQAA,EAAAA,QAAAC,IAAAC,EAAAA,SACAF,EAAAA,QAAAC,IAAAE,EAAAA,SAEA,IAAAC,EAAAC,EAAAA,SAAAD,GAAAE,EAAAD,EAAAA,SAAAC,GAEAC,EAAA,IAAAJ,EAAAA,QAAA,CACIK,OAAA,KACAC,SAAA,CAAAH,GAAAA,EAAAF,GAAAA,KAGJM,EAAA,IAAAR,UAAA,CACIS,KAAA,CACIC,EAAA,SAAAC,wEAAAN,EAAAK,EAAAC,EAAAC,GAAAC,eCNRC,EAAA,CACIC,KAAA,QACAR,SAAA,CACIS,MAAA,mBACAC,WAAA,+BACAC,UAAA,sBACAC,aAAA,uBACAC,QAAA,4BACAC,UAAA,yBACAC,OAAA,gCACAC,WAAA,qCACAC,MAAA,wBACAC,SAAA,mBACAC,IAAA,qBACAC,MAAA,qBACAC,MAAA,mBACAC,QAAA,iBACAC,OAAA,yBACAC,IAAA,2BACAC,UAAA,wBACAC,MAAA,uBACAC,IAAA,4BACAC,UAAA,wBACAC,QAAA,oBACAC,MAAA,gBACAC,SAAA,iBACAC,YAAA,iBACAC,KAAA,wBACAC,OAAA,wBAIRC,EAAA,CAAA,aAAA,QAAA,eAEAC,EAAAC,mBAAA,SAUAC,IAAAC,EAAAC,OAAAC,KAAAC,GAAAC,KAAA,SAAAC,GACI,IAAAT,EAAAU,SAAAD,GAAA,+GAQQE,KAAAF,EACAG,QAAAA,OAKZnD,EAAAA,SAAA,QAAAW,GAEA,IAAAyC,EAAA,CACIC,QAAA,SAAAC,GACIA,EAAAC,UAAAC,OAAAb,EACAW,EAAAG,UAAA,qBAAAC,EAAAA,oBACAJ,EAAAG,UAAA,qBAAAE,EAAAA,sBC1ERC,EAAA,CACIP,QAAA,SAAA1D,GACIA,EAAA4D,UAAAM,KAAAC,gDAEAnE,EAAA8D,UAAA,YAAAM,EAAAA"}