{"version":3,"file":"index.esm.js","sources":["../src/HTable.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-card v-if=\"skeletonLoading\">\r\n            <v-skeleton-loader :boilerplate=\"boilerplate\" :type=\"type\" :tile=\"tile\"></v-skeleton-loader>\r\n        </v-card>\r\n        <v-card v-else>\r\n            <v-data-table\r\n                v-model=\"selectedItems\"\r\n                class=\"elevation-1\"\r\n                :headers=\"tableHeaders\"\r\n                :items=\"tableItems\"\r\n                :page.sync=\"pageNumber\"\r\n                :items-per-page=\"pageSize\"\r\n                :server-items-length=\"totalItems\"\r\n                :loading=\"tableLoading\"\r\n                :hide-default-footer=\"externalPagination\"\r\n                :single-select=\"singleSelect\"\r\n                :show-select=\"showSelect\"\r\n                :item-key=\"itemKey\"\r\n                :group-by=\"groupBy\"\r\n                :group-desc=\"groupDesc\"\r\n                :sort-by=\"sortBy\"\r\n                :sort-desc=\"sortDesc\"\r\n                @item-selected=\"onSelectItem($event)\"\r\n                @toggle-select-all=\"onSelectAllItems($event)\"\r\n            >\r\n                <slot></slot>\r\n                <template v-slot:top>\r\n                    <v-toolbar flat color=\"white\">\r\n                        <v-toolbar-title>{{ tableTitle }}</v-toolbar-title>\r\n                        <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n                        <v-spacer></v-spacer>\r\n                        <slot name=\"top\"></slot>\r\n                    </v-toolbar>\r\n                    <v-divider></v-divider>\r\n                </template>\r\n                <template v-for=\"dynamicSlotName in dynamicSlotNames\" v-slot:[dynamicSlotName]=\"{ item }\">\r\n                    <slot :name=\"dynamicSlotName\" :item=\"item\"></slot>\r\n                </template>\r\n                <!-- <template v-slot:[`item.data-table-select`]=\"{ item }\">\r\n                    <v-simple-checkbox :ripple=\"false\" v-model=\"item.isSelected\"></v-simple-checkbox>\r\n                </template> -->\r\n            </v-data-table>\r\n            <div v-if=\"externalPagination\" class=\"text-lg-right pt-2 pb-2\">\r\n                <v-pagination\r\n                    :value=\"pageNumber\"\r\n                    :length=\"totalPages\"\r\n                    :total-visible=\"totalVisible\"\r\n                    @input=\"onPagination($event)\"\r\n                ></v-pagination>\r\n            </div>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { DataTableHeader } from 'vuetify';\r\nimport { Component, Emit, Prop, VModel, Vue } from 'vue-property-decorator';\r\n\r\n/**\r\n * https://blog.csdn.net/qq_41261490/article/details/102605640\r\n *\r\n * 1.tsconfig.json配置以下设置，简单粗暴，但是超级不推荐。\r\n * {\r\n *      \"compilerOptions\": {\r\n *          // 严格属性初始化\r\n *          \"strictPropertyInitialization\": false\r\n *      }\r\n * }\r\n *\r\n * 2.使用非空断言   属性后加“ ！”\r\n * @Prop() option!: String;\r\n *\r\n * 3.使用联合类型\r\n * @Prop() option: Object | undefined | null;\r\n *\r\n * 4.使用可选属性 属性后加“ ? ”\r\n * @Prop() option?: Object;\r\n */\r\n\r\n@Component({\r\n    name: 'HTable',\r\n})\r\nexport default class HTable extends Vue {\r\n    // v-table 相关属性\r\n    @Prop({ type: Array, default: () => [] }) readonly tableHeaders!: DataTableHeader[];\r\n    @Prop({ type: Array, default: () => [] }) readonly tableItems!: any[];\r\n    @Prop({ type: Number, default: 10 }) readonly pageSize!: number;\r\n    @Prop({ type: Number, default: -1 }) readonly totalItems?: number;\r\n    @Prop({ type: Boolean, default: false }) readonly tableLoading?: boolean;\r\n    @Prop({ type: Boolean, default: false }) readonly externalPagination?: boolean;\r\n    @Prop({ type: Boolean, default: false }) readonly singleSelect?: boolean;\r\n    @Prop({ type: Boolean, default: false }) readonly showSelect?: boolean;\r\n    @Prop({ type: String, default: 'id' }) readonly itemKey?: string;\r\n    @Prop({ type: Array, default: () => [] }) readonly groupBy?: string[];\r\n    @Prop({ type: Array, default: () => [] }) readonly groupDesc?: string[];\r\n    @Prop({ type: Array, default: () => [] }) readonly sortBy?: string[];\r\n    @Prop({ type: Array, default: () => [] }) readonly sortDesc?: string[];\r\n\r\n    // v-pagination 相关属性\r\n    @Prop({ type: Number, default: 0 }) readonly totalPages?: number;\r\n    @Prop({ type: Number, default: 7 }) readonly totalVisible?: number;\r\n\r\n    // v-skeleton-loader 相关属性\r\n    @Prop({ type: Boolean, default: false }) readonly boilerplate?: boolean;\r\n    @Prop({ type: Boolean, default: false }) readonly tile?: boolean;\r\n    @Prop({ type: String, default: 'table' }) readonly type?: string;\r\n\r\n    // 自定义扩展属性\r\n    @Prop(String) readonly tableTitle!: string;\r\n    @Prop({ type: Array, default: () => [] }) readonly columnSlots?: string[];\r\n    @Prop({ type: Boolean, default: false }) readonly skeletonLoading?: boolean;\r\n\r\n    @VModel({ type: Array, default: () => [] }) selectedItems?: any[];\r\n\r\n    private pageNumber = 1;\r\n\r\n    @Emit('selectItem')\r\n    private onSelectItem(e: Event): Event {\r\n        return e;\r\n    }\r\n\r\n    @Emit('selectAllItems')\r\n    private onSelectAllItems(e: Event): Event {\r\n        return e;\r\n    }\r\n\r\n    @Emit('pagination')\r\n    private onPagination(e: Event): Event {\r\n        if (typeof e === 'number') {\r\n            this.pageNumber = e as number;\r\n        }\r\n        return e;\r\n    }\r\n\r\n    private excludeSlots: string[] = ['top', 'data-table-select'];\r\n    private dynamicSlotNames: string[] = new Array<string>();\r\n\r\n    private mounted(): void {\r\n        this.initColumnSlots();\r\n    }\r\n\r\n    private initColumnSlots(): void {\r\n        if (this.columnSlots) {\r\n            for (let columnSlot of this.columnSlots) {\r\n                if (columnSlot && !this.excludeSlots.includes(columnSlot)) {\r\n                    if (columnSlot.search('item.') === -1) {\r\n                        this.dynamicSlotNames.push('item.' + columnSlot);\r\n                    } else {\r\n                        this.dynamicSlotNames.push(columnSlot);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"names":["let"],"mappings":"2OAmFAA"}