{"version":3,"file":"index.umd.js","sources":["../src/lib/database.ts","../src/lib/array.ts","../src/lib/message.ts"],"sourcesContent":["import { default as localforage } from 'localforage';\r\n\r\n/**\r\n * 这里使用单例模式，主要是因为将静态类，赋值给Vue.prototype会出现 Property '' is a static member of type '' 错误。\r\n * 参考以下文章\r\n * {@see https://techformist.com/static-variables-methods-typescript/}\r\n * {@see https://www.xspdf.com/resolution/54250655.html}\r\n * {@see https://www.typescriptlang.org/docs/handbook/classes.html#static-properties}\r\n *\r\n * 单例模式饿汉式与懒汉式\r\n * {@see https://zhuanlan.zhihu.com/p/129264092}\r\n */\r\nclass LocalForage {\r\n    private static instance = new LocalForage();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): LocalForage {\r\n        return this.instance;\r\n    }\r\n\r\n    /**\r\n     * 参考https://github.com/localForage/localForage/blob/master/typings/localforage.d.ts\r\n     *\r\n     * @param key\r\n     */\r\n    public getItem<T>(key: string): Promise<T | null> {\r\n        return localforage.getItem<T>(key);\r\n    }\r\n\r\n    public setItem<T>(key: string, value: T): Promise<T> {\r\n        return localforage.setItem<T>(key, value);\r\n    }\r\n\r\n    public removeItem(key: string): Promise<void> {\r\n        return localforage.removeItem(key);\r\n    }\r\n\r\n    public clear(): Promise<void> {\r\n        return localforage.clear();\r\n    }\r\n\r\n    public length(): Promise<number> {\r\n        return localforage.length();\r\n    }\r\n\r\n    public key(keyIndex: number): Promise<string> {\r\n        return localforage.key(keyIndex);\r\n    }\r\n\r\n    public keys(): Promise<string[]> {\r\n        return localforage.keys();\r\n    }\r\n    public iterate<T, U>(iteratee: (value: T, key: string, iterationNumber: number) => U): Promise<U> {\r\n        return localforage.iterate<T, U>(iteratee);\r\n    }\r\n\r\n    public setDriver(driver: string | string[]): Promise<void> {\r\n        return localforage.setDriver(driver);\r\n    }\r\n\r\n    public config(options: LocalForageOptions): boolean {\r\n        return localforage.config(options);\r\n    }\r\n\r\n    public createInstance(options: LocalForageOptions): LocalForage {\r\n        return localforage.createInstance(options);\r\n    }\r\n}\r\n\r\nexport const _localForage: LocalForage = LocalForage.getInstance();\r\n\r\nclass LocalStorage {\r\n    private static instance = new LocalStorage();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): LocalStorage {\r\n        return this.instance;\r\n    }\r\n\r\n    public setObject<T>(key: string, value: T): void {\r\n        this.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    public getObject<T>(key: string): T | null {\r\n        const result = this.getItem(key);\r\n        if (result) {\r\n            return <T>JSON.parse(result);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public setItem(key: string, value: string): void {\r\n        localStorage.setItem(key, value);\r\n    }\r\n    public getItem(key: string): string | null {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    public removeItem(key: string): void {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    public clear(): void {\r\n        localStorage.clear();\r\n    }\r\n\r\n    public isExist(key: string): boolean {\r\n        if (key && key in localStorage) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const _localStorage: LocalStorage = LocalStorage.getInstance();\r\n","import * as lodash from 'lodash';\r\n\r\nclass ArrayUtils {\r\n    private static instance = new ArrayUtils();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): ArrayUtils {\r\n        return this.instance;\r\n    }\r\n\r\n    public find<T>(array: T[], element: T, comparator): T | undefined {\r\n        return lodash.find(array, (item) => item[comparator] === element[comparator]);\r\n    }\r\n\r\n    public remove<T>(array: T[], element: T, comparator): T[] {\r\n        return lodash.remove<T>(array, (item) => item[comparator] === element[comparator]);\r\n    }\r\n}\r\n\r\nexport const _array: ArrayUtils = ArrayUtils.getInstance();\r\n","import Swal, { SweetAlertIcon, SweetAlertResult } from 'sweetalert2';\r\n\r\n/**\r\n * 这里使用单例模式，主要是因为将静态类，赋值给Vue.prototype会出现 Property '' is a static member of type '' 错误。\r\n * 参考以下文章\r\n * {@see https://techformist.com/static-variables-methods-typescript/}\r\n * {@see https://www.xspdf.com/resolution/54250655.html}\r\n * {@see https://www.typescriptlang.org/docs/handbook/classes.html#static-properties}\r\n *\r\n * 单例模式饿汉式与懒汉式\r\n * {@see https://zhuanlan.zhihu.com/p/129264092}\r\n */\r\nclass Notify {\r\n    private static instance = new Notify();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): Notify {\r\n        return this.instance;\r\n    }\r\n\r\n    public information(title: string, icon: SweetAlertIcon): Promise<SweetAlertResult<string>> {\r\n        return Swal.fire({\r\n            position: 'top',\r\n            title: title,\r\n            icon: icon,\r\n            timer: 2000,\r\n            showConfirmButton: false,\r\n        });\r\n    }\r\n\r\n    public info(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'info');\r\n    }\r\n\r\n    public error(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'error');\r\n    }\r\n\r\n    public warning(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'warning');\r\n    }\r\n\r\n    public success(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'success');\r\n    }\r\n\r\n    public question(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'question');\r\n    }\r\n}\r\n\r\nexport const _notify: Notify = Notify.getInstance();\r\n\r\nexport { Swal, SweetAlertIcon, SweetAlertResult };\r\n"],"names":["LocalForage","LocalStorage","ArrayUtils","Notify"],"mappings":"+iDAamBA,mjBA4DAC,mRCtEAC,wjBCUAC"}