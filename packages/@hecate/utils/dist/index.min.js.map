{"version":3,"file":"index.min.js","sources":["../src/lib/database.ts","../src/lib/array.ts","../src/lib/message.ts","../src/lib/crypto.ts","../src/lib/index.ts","../src/locales/zh.ts","../src/locales/en.ts"],"sourcesContent":["import { default as localforage } from 'localforage';\r\n\r\n/**\r\n * 这里使用单例模式，主要是因为将静态类，赋值给Vue.prototype会出现 Property '' is a static member of type '' 错误。\r\n * 参考以下文章\r\n * {@see https://techformist.com/static-variables-methods-typescript/}\r\n * {@see https://www.xspdf.com/resolution/54250655.html}\r\n * {@see https://www.typescriptlang.org/docs/handbook/classes.html#static-properties}\r\n *\r\n * 单例模式饿汉式与懒汉式\r\n * {@see https://zhuanlan.zhihu.com/p/129264092}\r\n */\r\nclass LocalForage {\r\n    private static instance = new LocalForage();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): LocalForage {\r\n        return this.instance;\r\n    }\r\n\r\n    /**\r\n     * 参考https://github.com/localForage/localForage/blob/master/typings/localforage.d.ts\r\n     *\r\n     * @param key\r\n     */\r\n    public getItem<T>(key: string): Promise<T | null> {\r\n        return localforage.getItem<T>(key);\r\n    }\r\n\r\n    public setItem<T>(key: string, value: T): Promise<T> {\r\n        return localforage.setItem<T>(key, value);\r\n    }\r\n\r\n    public removeItem(key: string): Promise<void> {\r\n        return localforage.removeItem(key);\r\n    }\r\n\r\n    public clear(): Promise<void> {\r\n        return localforage.clear();\r\n    }\r\n\r\n    public length(): Promise<number> {\r\n        return localforage.length();\r\n    }\r\n\r\n    public key(keyIndex: number): Promise<string> {\r\n        return localforage.key(keyIndex);\r\n    }\r\n\r\n    public keys(): Promise<string[]> {\r\n        return localforage.keys();\r\n    }\r\n    public iterate<T, U>(iteratee: (value: T, key: string, iterationNumber: number) => U): Promise<U> {\r\n        return localforage.iterate<T, U>(iteratee);\r\n    }\r\n\r\n    public setDriver(driver: string | string[]): Promise<void> {\r\n        return localforage.setDriver(driver);\r\n    }\r\n\r\n    public config(options: LocalForageOptions): boolean {\r\n        return localforage.config(options);\r\n    }\r\n\r\n    public createInstance(options: LocalForageOptions): LocalForage {\r\n        return localforage.createInstance(options);\r\n    }\r\n}\r\n\r\nexport const _localForage: LocalForage = LocalForage.getInstance();\r\n\r\nclass LocalStorage {\r\n    private static instance = new LocalStorage();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): LocalStorage {\r\n        return this.instance;\r\n    }\r\n\r\n    public setObject<T>(key: string, value: T): void {\r\n        this.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    public getObject<T>(key: string): T | null {\r\n        const result = this.getItem(key);\r\n        if (result) {\r\n            return <T>JSON.parse(result);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public setItem(key: string, value: string): void {\r\n        localStorage.setItem(key, value);\r\n    }\r\n    public getItem(key: string): string | null {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    public removeItem(key: string): void {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    public clear(): void {\r\n        localStorage.clear();\r\n    }\r\n\r\n    public isExist(key: string): boolean {\r\n        if (key && key in localStorage) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const _localStorage: LocalStorage = LocalStorage.getInstance();\r\n","import * as lodash from 'lodash';\r\n\r\nclass ArrayUtils {\r\n    private static instance = new ArrayUtils();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): ArrayUtils {\r\n        return this.instance;\r\n    }\r\n\r\n    public find<T>(array: T[], element: T, comparator): T | undefined {\r\n        return lodash.find(array, (item) => item[comparator] === element[comparator]);\r\n    }\r\n\r\n    public remove<T>(array: T[], element: T, comparator): T[] {\r\n        return lodash.remove<T>(array, (item) => item[comparator] === element[comparator]);\r\n    }\r\n}\r\n\r\nexport const _array: ArrayUtils = ArrayUtils.getInstance();\r\n","import Swal, { SweetAlertIcon, SweetAlertResult } from 'sweetalert2';\r\n\r\n/**\r\n * 这里使用单例模式，主要是因为将静态类，赋值给Vue.prototype会出现 Property '' is a static member of type '' 错误。\r\n * 参考以下文章\r\n * {@see https://techformist.com/static-variables-methods-typescript/}\r\n * {@see https://www.xspdf.com/resolution/54250655.html}\r\n * {@see https://www.typescriptlang.org/docs/handbook/classes.html#static-properties}\r\n *\r\n * 单例模式饿汉式与懒汉式\r\n * {@see https://zhuanlan.zhihu.com/p/129264092}\r\n */\r\nclass Notify {\r\n    private static instance = new Notify();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): Notify {\r\n        return this.instance;\r\n    }\r\n\r\n    public information(title: string, icon: SweetAlertIcon): Promise<SweetAlertResult<string>> {\r\n        return Swal.fire({\r\n            position: 'top',\r\n            title: title,\r\n            icon: icon,\r\n            timer: 2000,\r\n            showConfirmButton: false,\r\n        });\r\n    }\r\n\r\n    public info(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'info');\r\n    }\r\n\r\n    public error(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'error');\r\n    }\r\n\r\n    public warning(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'warning');\r\n    }\r\n\r\n    public success(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'success');\r\n    }\r\n\r\n    public question(text: string): Promise<SweetAlertResult<string>> {\r\n        return this.information(text, 'question');\r\n    }\r\n}\r\n\r\nexport const _notify: Notify = Notify.getInstance();\r\n\r\nexport { Swal, SweetAlertIcon, SweetAlertResult };\r\n","import CryptoJS from 'crypto-js';\r\nimport NodeRSA from 'node-rsa';\r\n\r\nclass AES {\r\n    private static instance = new AES();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): AES {\r\n        return this.instance;\r\n    }\r\n\r\n    private default_key = 'abcd12345sxyzhkj';\r\n\r\n    //加密\r\n    public encrypt(key: string, content: unknown): string {\r\n        key = key ? key : this.default_key;\r\n        const _key = CryptoJS.enc.Utf8.parse(key);\r\n        const _srcs = CryptoJS.enc.Utf8.parse(content);\r\n        const encrypted = CryptoJS.AES.encrypt(_srcs, _key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 });\r\n        return encrypted.toString();\r\n    }\r\n\r\n    //解密\r\n    public decrypt(key: string, content: unknown): string {\r\n        key = key ? key : this.default_key;\r\n        const _key = CryptoJS.enc.Utf8.parse(key);\r\n        const decrypt = CryptoJS.AES.decrypt(content, _key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 });\r\n        return CryptoJS.enc.Utf8.stringify(decrypt).toString();\r\n    }\r\n}\r\n\r\nexport const _aes: AES = AES.getInstance();\r\n\r\nclass RSA {\r\n    private static instance = new RSA();\r\n\r\n    private constructor() {}\r\n\r\n    public static getInstance(): RSA {\r\n        return this.instance;\r\n    }\r\n\r\n    public create(): RSAPair {\r\n        const key = new NodeRSA({ b: 512 });\r\n        key.setOptions({ encryptionScheme: 'pkcs1' });\r\n        return { publicKey: key.exportKey('pkcs8-public'), privateKey: key.exportKey('pkcs8-private') };\r\n    }\r\n\r\n    public encrypt(publicKey: string, content: any): string {\r\n        const key = new NodeRSA(publicKey, 'pkcs8-public', { encryptionScheme: 'pkcs1' });\r\n        if (content instanceof Object || content instanceof Array) {\r\n            return key.encrypt(JSON.stringify(content), 'base64', 'utf8');\r\n        } else {\r\n            return key.encrypt(new String(content), 'base64', 'utf8');\r\n        }\r\n    }\r\n\r\n    public decrypt(privateKey: string, content: string): any {\r\n        const key = new NodeRSA(privateKey, 'pkcs8-private', { encryptionScheme: 'pkcs1' });\r\n        return key.decrypt(content, 'utf8');\r\n    }\r\n}\r\n\r\nexport const _rsa: RSA = RSA.getInstance();\r\n","import * as lodash from 'lodash';\r\nimport * as shortid from 'shortid';\r\nimport { Base64 } from 'js-base64';\r\nimport moment from 'moment';\r\nimport { _localForage, _localStorage } from './database';\r\nimport { _array } from './array';\r\nimport { _notify, Swal, SweetAlertIcon, SweetAlertResult } from './message';\r\nimport { _rsa, _aes } from './crypto';\r\n\r\nmoment.locale('zh-cn');\r\n\r\nexport {\r\n    _localForage,\r\n    _localStorage,\r\n    _notify,\r\n    _array,\r\n    Swal,\r\n    SweetAlertIcon,\r\n    SweetAlertResult,\r\n    lodash,\r\n    shortid,\r\n    moment,\r\n    _rsa,\r\n    _aes,\r\n    Base64,\r\n};\r\n","const zh = {\r\n    $vuetify: {\r\n        badge: '徽章',\r\n        close: '关闭',\r\n        dataIterator: {\r\n            noResultsText: '没有符合条件的结果',\r\n            loadingText: '加载中……',\r\n        },\r\n        dataTable: {\r\n            itemsPerPageText: '每页数目：',\r\n            ariaLabel: {\r\n                sortDescending: '：降序排列。',\r\n                sortAscending: '：升序排列。',\r\n                sortNone: '：未排序。',\r\n                activateNone: '点击以移除排序。',\r\n                activateDescending: '点击以降序排列。',\r\n                activateAscending: '点击以升序排列。',\r\n            },\r\n            sortBy: '排序方式',\r\n        },\r\n        dataFooter: {\r\n            itemsPerPageText: '每页数目：',\r\n            itemsPerPageAll: '全部',\r\n            nextPage: '下一页',\r\n            prevPage: '上一页',\r\n            firstPage: '首页',\r\n            lastPage: '尾页',\r\n            pageText: '{0}-{1} 共 {2}',\r\n        },\r\n        datePicker: {\r\n            itemsSelected: '已选择 {0}',\r\n            nextMonthAriaLabel: '下个月',\r\n            nextYearAriaLabel: '明年',\r\n            prevMonthAriaLabel: '前一个月',\r\n            prevYearAriaLabel: '前一年',\r\n        },\r\n        noDataText: '没有数据',\r\n        carousel: {\r\n            prev: '上一张',\r\n            next: '下一张',\r\n            ariaLabel: {\r\n                delimiter: 'Carousel slide {0} of {1}',\r\n            },\r\n        },\r\n        calendar: {\r\n            moreEvents: '还有 {0} 项',\r\n        },\r\n        fileInput: {\r\n            counter: '{0} 个文件',\r\n            counterSize: '{0} 个文件（共 {1}）',\r\n        },\r\n        timePicker: {\r\n            am: 'AM',\r\n            pm: 'PM',\r\n        },\r\n        pagination: {\r\n            ariaLabel: {\r\n                wrapper: '分页导航',\r\n                next: '下一页',\r\n                previous: '上一页',\r\n                page: '转到页面 {0}',\r\n                currentPage: '当前页 {0}',\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport default zh;\r\n","const en = {\r\n    $vuetify: {\r\n        badge: 'Badge',\r\n        close: 'Close',\r\n        dataIterator: {\r\n            noResultsText: 'No matching records found',\r\n            loadingText: 'Loading items...',\r\n        },\r\n        dataTable: {\r\n            itemsPerPageText: 'Rows per page:',\r\n            ariaLabel: {\r\n                sortDescending: 'Sorted descending.',\r\n                sortAscending: 'Sorted ascending.',\r\n                sortNone: 'Not sorted.',\r\n                activateNone: 'Activate to remove sorting.',\r\n                activateDescending: 'Activate to sort descending.',\r\n                activateAscending: 'Activate to sort ascending.',\r\n            },\r\n            sortBy: 'Sort by',\r\n        },\r\n        dataFooter: {\r\n            itemsPerPageText: 'Items per page:',\r\n            itemsPerPageAll: 'All',\r\n            nextPage: 'Next page',\r\n            prevPage: 'Previous page',\r\n            firstPage: 'First page',\r\n            lastPage: 'Last page',\r\n            pageText: '{0}-{1} of {2}',\r\n        },\r\n        datePicker: {\r\n            itemsSelected: '{0} selected',\r\n            nextMonthAriaLabel: 'Next month',\r\n            nextYearAriaLabel: 'Next year',\r\n            prevMonthAriaLabel: 'Previous month',\r\n            prevYearAriaLabel: 'Previous year',\r\n        },\r\n        noDataText: 'No data available',\r\n        carousel: {\r\n            prev: 'Previous visual',\r\n            next: 'Next visual',\r\n            ariaLabel: {\r\n                delimiter: 'Carousel slide {0} of {1}',\r\n            },\r\n        },\r\n        calendar: {\r\n            moreEvents: '{0} more',\r\n        },\r\n        fileInput: {\r\n            counter: '{0} files',\r\n            counterSize: '{0} files ({1} in total)',\r\n        },\r\n        timePicker: {\r\n            am: 'AM',\r\n            pm: 'PM',\r\n        },\r\n        pagination: {\r\n            ariaLabel: {\r\n                wrapper: 'Pagination Navigation',\r\n                next: 'Next page',\r\n                previous: 'Previous page',\r\n                page: 'Goto Page {0}',\r\n                currentPage: 'Current Page, Page {0}',\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport default en;\r\n"],"names":["LocalForage","getInstance","getItem","key","localforage","removeItem","clear","length","keyIndex","keys","iterate","iteratee","setDriver","driver","config","options","createInstance","instance","const","_localForage","LocalStorage","this","setItem","JSON","stringify","value","getObject","result","parse","localStorage","isExist","_localStorage","ArrayUtils","prototype","find","array","element","comparator","remove","_array","Notify","position","title","icon","timer","showConfirmButton","info","text","error","warning","success","question","_notify","AES","default_key","_key","CryptoJS","enc","Utf8","_srcs","content","encrypt","mode","ECB","padding","pad","Pkcs7","toString","decrypt","_aes","RSA","publicKey","exportKey","privateKey","NodeRSA","encryptionScheme","Object","Array","String","_rsa","moment","locale","$vuetify","badge","close","dataIterator","noResultsText","loadingText","dataTable","itemsPerPageText","ariaLabel","sortDescending","sortAscending","sortNone","activateNone","activateDescending","activateAscending","sortBy","dataFooter","itemsPerPageAll","nextPage","prevPage","firstPage","lastPage","pageText","datePicker","itemsSelected","nextMonthAriaLabel","nextYearAriaLabel","prevMonthAriaLabel","prevYearAriaLabel","noDataText","carousel","prev","next","delimiter","calendar","moreEvents","fileInput","counter","counterSize","timePicker","am","pm","pagination","wrapper","previous","page","currentPage"],"mappings":"8cAYAA,EAGI,aAEOA,EAAAC,yDASAC,QAAA,SAAAC,GACH,OAAAC,EAAA,QAAAF,QAAAC,iFAOGE,WAAA,SAAAF,GACH,OAAAC,EAAA,QAAAC,WAAAF,iCAIA,OAAAC,EAAAA,QAAAE,uCAIA,OAAAF,EAAAA,QAAAG,sBAGGJ,IAAA,SAAAK,GACH,OAAAJ,EAAA,QAAAD,IAAAK,gCAIA,OAAAJ,EAAAA,QAAAK,oBAEGC,QAAA,SAAAC,GACH,OAAAP,EAAA,QAAAM,QAAAC,gBAGGC,UAAA,SAAAC,GACH,OAAAT,EAAA,QAAAQ,UAAAC,gBAGGC,OAAA,SAAAC,GACH,OAAAX,EAAA,QAAAU,OAAAC,gBAGGC,eAAA,SAAAD,GACH,OAAAX,EAAA,QAAAY,eAAAD,IArDWf,EAAAiB,SAAA,IAAAjB,EAyDnBkB,IAAAC,EAAAnB,EAAAC,cAEAmB,EAGI,aAEOA,EAAAnB,iFAKHoB,KAAAC,QAAAnB,EAAAoB,KAAAC,UAAAC,iBAGGC,UAAA,SAAAvB,yBAEH,OAAAwB,EACIJ,KAAAK,MAAAD,GAEJ,wCAIAE,aAAAP,QAAAnB,EAAAsB,gBAEGvB,QAAA,SAAAC,GACH,OAAA0B,aAAA3B,QAAAC,gBAGGE,WAAA,SAAAF,GACH0B,aAAAxB,WAAAF,mEAOG2B,QAAA,SAAA3B,GACH,SAAAA,KAAAA,KAAA0B,gBApCWT,EAAAH,SAAA,IAAAG,EA4CnBF,IAAAa,EAAAX,EAAAnB,cCnHA+B,EAGI,aAEOA,EAAA/B,6CAIA+B,EAAAC,UAAAC,KAAA,SAAAC,EAAAC,EAAAC,uDAIAL,EAAAC,UAAAK,OAAA,SAAAH,EAAAC,EAAAC,yDAZQL,EAAAf,SAAA,IAAAe,EAiBnBd,IAAAqB,EAAAP,EAAA/B,cCRAuC,EAGI,aAEOA,EAAAvC,0GAMCwC,SAAA,MACAC,MAAAA,EACAC,KAAAA,EACAC,MAAA,IACAC,mBAAA,iBAIDC,KAAA,SAAAC,kDAIAC,MAAA,SAAAD,mDAIAE,QAAA,SAAAF,qDAIAG,QAAA,SAAAH,qDAIAI,SAAA,SAAAJ,0CAlCQP,EAAAvB,SAAA,IAAAuB,EAuCnBtB,IAAAkC,EAAAZ,EAAAvC,cCjDAoD,EAGI,gDAEOA,EAAApD,+EAQHE,EAAAA,GAAAkB,KAAAiC,YACApC,IAAAqC,EAAAC,EAAAA,QAAAC,IAAAC,KAAA9B,MAAAzB,GACAwD,EAAAH,EAAAA,QAAAC,IAAAC,KAAA9B,MAAAgC,GAEA,OADAJ,EAAAA,QAAAH,IAAAQ,QAAAF,EAAAJ,EAAA,CAAAO,KAAAN,EAAAA,QAAAM,KAAAC,IAAAC,QAAAR,EAAA,QAAAS,IAAAC,QACAC,8CAKAhE,EAAAA,GAAAkB,KAAAiC,YACApC,IAAAqC,EAAAC,EAAAA,QAAAC,IAAAC,KAAA9B,MAAAzB,GACAiE,EAAAZ,EAAAA,QAAAH,IAAAe,QAAAR,EAAAL,EAAA,CAAAO,KAAAN,EAAAA,QAAAM,KAAAC,IAAAC,QAAAR,EAAA,QAAAS,IAAAC,QACA,OAAAV,EAAAA,QAAAC,IAAAC,KAAAlC,UAAA4C,GAAAD,YAxBWd,EAAApC,SAAA,IAAAoC,EA4BnBnC,IAAAmD,EAAAhB,EAAApD,cAEAqE,EAGI,aAEOA,EAAArE,wGAOH,gDAAA,CAAAsE,UAAApE,EAAAqE,UAAA,gBAAAC,WAAAtE,EAAAqE,UAAA,qDAIAtD,IAAAf,EAAA,IAAAuE,EAAAA,QAAAH,EAAA,eAAA,CAAAI,iBAAA,UACA,OAAAf,aAAAgB,QAAAhB,aAAAiB,MACI1E,EAAA0D,QAAAtC,KAAAC,UAAAoC,GAAA,SAAA,QAEAzD,EAAA0D,QAAA,IAAAiB,OAAAlB,GAAA,SAAA,kDAKJ,IAAAc,EAAAA,QAAAD,EAAA,gBAAA,CAAAE,iBAAA,6BAxBWL,EAAArD,SAAA,IAAAqD,EA6BnBpD,IAAA6D,EAAAT,EAAArE,cCvDA+E,EAAAA,QAAAC,OAAA,qNCTA,CACIC,SAAA,CACIC,MAAA,KACAC,MAAA,KACAC,aAAA,CACIC,cAAA,YACAC,YAAA,SAEJC,UAAA,CACIC,iBAAA,QACAC,UAAA,CACIC,eAAA,SACAC,cAAA,SACAC,SAAA,QACAC,aAAA,WACAC,mBAAA,WACAC,kBAAA,YAEJC,OAAA,QAEJC,WAAA,CACIT,iBAAA,QACAU,gBAAA,KACAC,SAAA,MACAC,SAAA,MACAC,UAAA,KACAC,SAAA,KACAC,SAAA,iBAEJC,WAAA,CACIC,cAAA,UACAC,mBAAA,MACAC,kBAAA,KACAC,mBAAA,OACAC,kBAAA,OAEJC,WAAA,OACAC,SAAA,CACIC,KAAA,MACAC,KAAA,MACAxB,UAAA,CACIyB,UAAA,8BAGRC,SAAA,CACIC,WAAA,YAEJC,UAAA,CACIC,QAAA,UACAC,YAAA,kBAEJC,WAAA,CACIC,GAAA,KACAC,GAAA,MAEJC,WAAA,CACIlC,UAAA,CACImC,QAAA,OACAX,KAAA,MACAY,SAAA,MACAC,KAAA,WACAC,YAAA,iBC7DhB,CACI9C,SAAA,CACIC,MAAA,QACAC,MAAA,QACAC,aAAA,CACIC,cAAA,4BACAC,YAAA,oBAEJC,UAAA,CACIC,iBAAA,iBACAC,UAAA,CACIC,eAAA,qBACAC,cAAA,oBACAC,SAAA,cACAC,aAAA,8BACAC,mBAAA,+BACAC,kBAAA,+BAEJC,OAAA,WAEJC,WAAA,CACIT,iBAAA,kBACAU,gBAAA,MACAC,SAAA,YACAC,SAAA,gBACAC,UAAA,aACAC,SAAA,YACAC,SAAA,kBAEJC,WAAA,CACIC,cAAA,eACAC,mBAAA,aACAC,kBAAA,YACAC,mBAAA,iBACAC,kBAAA,iBAEJC,WAAA,oBACAC,SAAA,CACIC,KAAA,kBACAC,KAAA,cACAxB,UAAA,CACIyB,UAAA,8BAGRC,SAAA,CACIC,WAAA,YAEJC,UAAA,CACIC,QAAA,YACAC,YAAA,4BAEJC,WAAA,CACIC,GAAA,KACAC,GAAA,MAEJC,WAAA,CACIlC,UAAA,CACImC,QAAA,wBACAX,KAAA,YACAY,SAAA,gBACAC,KAAA,gBACAC,YAAA"}