{"version":3,"file":"index.esm.js","sources":["../src/lib/locale/zh.ts","../src/lib/locale/index.ts","../src/lib/locale/custom.ts","../src/HBpmnModdle.vue","../src/index.ts"],"sourcesContent":["/* eslint-disable */\r\nexport default {\r\n    // Labels\r\n    'Activate the global connect tool': '激活全局连接工具',\r\n    'Append {type}': '添加 {type}',\r\n    'Add Lane above': '在上面添加道',\r\n    'Divide into two Lanes': '分割成两个道',\r\n    'Divide into three Lanes': '分割成三个道',\r\n    'Add Lane below': '在下面添加道',\r\n    'Append compensation activity': '追加补偿活动',\r\n    'Change type': '修改类型',\r\n    'Connect using Association': '使用关联连接',\r\n    'Connect using Sequence/MessageFlow or Association': '使用顺序/消息流或者关联连接',\r\n    'Connect using DataInputAssociation': '使用数据输入关联连接',\r\n    Remove: '移除',\r\n    'Activate the hand tool': '激活抓手工具',\r\n    'Activate the lasso tool': '激活套索工具',\r\n    'Activate the create/remove space tool': '激活创建/删除空间工具',\r\n    'Create expanded SubProcess': '创建扩展子过程',\r\n    'Create IntermediateThrowEvent/BoundaryEvent': '创建中间抛出事件/边界事件',\r\n    'Create Pool/Participant': '创建池/参与者',\r\n    'Parallel Multi Instance': '并行多重事件',\r\n    'Sequential Multi Instance': '时序多重事件',\r\n    DataObjectReference: '数据对象参考',\r\n    DataStoreReference: '数据存储参考',\r\n    Loop: '循环',\r\n    'Ad-hoc': '即席',\r\n    'Create {type}': '创建 {type}',\r\n    Task: '任务',\r\n    'Send Task': '发送任务',\r\n    'Receive Task': '接收任务',\r\n    'User Task': '用户任务',\r\n    'Manual Task': '手工任务',\r\n    'Business Rule Task': '业务规则任务',\r\n    'Service Task': '服务任务',\r\n    'Script Task': '脚本任务',\r\n    'Call Activity': '调用活动',\r\n    'Sub Process (collapsed)': '子流程（折叠的）',\r\n    'Sub Process (expanded)': '子流程（展开的）',\r\n    'Start Event': '开始事件',\r\n    StartEvent: '开始事件',\r\n    'Intermediate Throw Event': '中间事件',\r\n    'End Event': '结束事件',\r\n    EndEvent: '结束事件',\r\n    'Create Gateway': '创建网关',\r\n    'Create Intermediate/Boundary Event': '创建中间/边界事件',\r\n    'Message Start Event': '消息开始事件',\r\n    'Timer Start Event': '定时开始事件',\r\n    'Conditional Start Event': '条件开始事件',\r\n    'Signal Start Event': '信号开始事件',\r\n    'Error Start Event': '错误开始事件',\r\n    'Escalation Start Event': '升级开始事件',\r\n    'Compensation Start Event': '补偿开始事件',\r\n    'Message Start Event (non-interrupting)': '消息开始事件（非中断）',\r\n    'Timer Start Event (non-interrupting)': '定时开始事件（非中断）',\r\n    'Conditional Start Event (non-interrupting)': '条件开始事件（非中断）',\r\n    'Signal Start Event (non-interrupting)': '信号开始事件（非中断）',\r\n    'Escalation Start Event (non-interrupting)': '升级开始事件（非中断）',\r\n    'Message Intermediate Catch Event': '消息中间捕获事件',\r\n    'Message Intermediate Throw Event': '消息中间抛出事件',\r\n    'Timer Intermediate Catch Event': '定时中间捕获事件',\r\n    'Escalation Intermediate Throw Event': '升级中间抛出事件',\r\n    'Conditional Intermediate Catch Event': '条件中间捕获事件',\r\n    'Link Intermediate Catch Event': '链接中间捕获事件',\r\n    'Link Intermediate Throw Event': '链接中间抛出事件',\r\n    'Compensation Intermediate Throw Event': '补偿中间抛出事件',\r\n    'Signal Intermediate Catch Event': '信号中间捕获事件',\r\n    'Signal Intermediate Throw Event': '信号中间抛出事件',\r\n    'Message End Event': '消息结束事件',\r\n    'Escalation End Event': '定时结束事件',\r\n    'Error End Event': '错误结束事件',\r\n    'Cancel End Event': '取消结束事件',\r\n    'Compensation End Event': '补偿结束事件',\r\n    'Signal End Event': '信号结束事件',\r\n    'Terminate End Event': '终止结束事件',\r\n    'Message Boundary Event': '消息边界事件',\r\n    'Message Boundary Event (non-interrupting)': '消息边界事件（非中断）',\r\n    'Timer Boundary Event': '定时边界事件',\r\n    'Timer Boundary Event (non-interrupting)': '定时边界事件（非中断）',\r\n    'Escalation Boundary Event': '升级边界事件',\r\n    'Escalation Boundary Event (non-interrupting)': '升级边界事件（非中断）',\r\n    'Conditional Boundary Event': '条件边界事件',\r\n    'Conditional Boundary Event (non-interrupting)': '条件边界事件（非中断）',\r\n    'Error Boundary Event': '错误边界事件',\r\n    'Cancel Boundary Event': '取消边界事件',\r\n    'Signal Boundary Event': '信号边界事件',\r\n    'Signal Boundary Event (non-interrupting)': '信号边界事件（非中断）',\r\n    'Compensation Boundary Event': '补偿边界事件',\r\n    'Exclusive Gateway': '互斥网关',\r\n    'Parallel Gateway': '并行网关',\r\n    'Inclusive Gateway': '相容网关',\r\n    'Complex Gateway': '复杂网关',\r\n    'Event based Gateway': '事件网关',\r\n    Transaction: '转运',\r\n    'Sub Process': '子流程',\r\n    'Event Sub Process': '事件子流程',\r\n    'Collapsed Pool': '折叠池',\r\n    'Expanded Pool': '展开池',\r\n\r\n    // Errors\r\n    'no parent for {element} in {parent}': '在{parent}里，{element}没有父类',\r\n    'no shape type specified': '没有指定的形状类型',\r\n    'flow elements must be children of pools/participants': '流元素必须是池/参与者的子类',\r\n    'out of bounds release': 'out of bounds release',\r\n    'more than {count} child lanes': '子道大于{count} ',\r\n    'element required': '元素不能为空',\r\n    'diagram not part of bpmn:Definitions': '流程图不符合bpmn规范',\r\n    'no diagram to display': '没有可展示的流程图',\r\n    'no process or collaboration to display': '没有可展示的流程/协作',\r\n    'element {element} referenced by {referenced}#{property} not yet drawn':\r\n        '由{referenced}#{property}引用的{element}元素仍未绘制',\r\n    'already rendered {element}': '{element} 已被渲染',\r\n    'failed to import {element}': '导入{element}失败',\r\n    //属性面板的参数\r\n    Id: '编号',\r\n    Name: '名称',\r\n    General: '常规',\r\n    Details: '详情',\r\n    'Message Name': '消息名称',\r\n    Message: '消息',\r\n    Initiator: '创建者',\r\n    'Asynchronous Continuations': '持续异步',\r\n    'Asynchronous Before': '异步前',\r\n    'Asynchronous After': '异步后',\r\n    'Job Configuration': '工作配置',\r\n    Exclusive: '排除',\r\n    'Job Priority': '工作优先级',\r\n    'Retry Time Cycle': '重试时间周期',\r\n    Documentation: '文档',\r\n    'Element Documentation': '元素文档',\r\n    'History Configuration': '历史配置',\r\n    'History Time To Live': '历史的生存时间',\r\n    Forms: '表单',\r\n    'Form Key': '表单key',\r\n    'Form Fields': '表单字段',\r\n    'Business Key': '业务key',\r\n    'Form Field': '表单字段',\r\n    ID: '编号',\r\n    Type: '类型',\r\n    Label: '名称',\r\n    'Default Value': '默认值',\r\n    Validation: '校验',\r\n    'Add Constraint': '添加约束',\r\n    Config: '配置',\r\n    Properties: '属性',\r\n    'Add Property': '添加属性',\r\n    Value: '值',\r\n    Listeners: '监听器',\r\n    'Execution Listener': '执行监听',\r\n    'Event Type': '事件类型',\r\n    'Listener Type': '监听器类型',\r\n    'Java Class': 'Java类',\r\n    Expression: '表达式',\r\n    'Must provide a value': '必须提供一个值',\r\n    'Delegate Expression': '代理表达式',\r\n    Script: '脚本',\r\n    'Script Format': '脚本格式',\r\n    'Script Type': '脚本类型',\r\n    'Inline Script': '内联脚本',\r\n    'External Script': '外部脚本',\r\n    Resource: '资源',\r\n    'Field Injection': '字段注入',\r\n    Extensions: '扩展',\r\n    'Input/Output': '输入/输出',\r\n    'Input Parameters': '输入参数',\r\n    'Output Parameters': '输出参数',\r\n    Parameters: '参数',\r\n    'Output Parameter': '输出参数',\r\n    'Timer Definition Type': '定时器定义类型',\r\n    'Timer Definition': '定时器定义',\r\n    Date: '日期',\r\n    Duration: '持续',\r\n    Cycle: '循环',\r\n    Signal: '信号',\r\n    'Signal Name': '信号名称',\r\n    Escalation: '升级',\r\n    Error: '错误',\r\n    'Link Name': '链接名称',\r\n    Condition: '条件名称',\r\n    'Variable Name': '变量名称',\r\n    'Variable Event': '变量事件',\r\n    'Specify more than one variable change event as a comma separated list.': '多个变量事件以逗号隔开',\r\n    'Wait for Completion': '等待完成',\r\n    'Activity Ref': '活动参考',\r\n    'Version Tag': '版本标签',\r\n    Executable: '可执行文件',\r\n    'External Task Configuration': '扩展任务配置',\r\n    'Task Priority': '任务优先级',\r\n    External: '外部',\r\n    Connector: '连接器',\r\n    'Must configure Connector': '必须配置连接器',\r\n    'Connector Id': '连接器编号',\r\n    Implementation: '实现方式',\r\n    'Field Injections': '字段注入',\r\n    Fields: '字段',\r\n    'Result Variable': '结果变量',\r\n    Topic: '主题',\r\n    'Configure Connector': '配置连接器',\r\n    'Input Parameter': '输入参数',\r\n    Assignee: '代理人',\r\n    'Candidate Users': '候选用户',\r\n    'Candidate Groups': '候选组',\r\n    'Due Date': '到期时间',\r\n    'Follow Up Date': '跟踪日期',\r\n    Priority: '优先级',\r\n    'The follow up date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)':\r\n        '跟踪日期必须符合EL表达式，如： ${someDate} ,或者一个ISO标准日期，如：2015-06-26T09:54:00',\r\n    'The due date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)':\r\n        '跟踪日期必须符合EL表达式，如： ${someDate} ,或者一个ISO标准日期，如：2015-06-26T09:54:00',\r\n    Variables: '变量',\r\n};\r\n","import BpmnTranslate from \"./custom\";\r\n\r\nexport default {\r\n    translate: [\"value\", BpmnTranslate],\r\n};\r\n","import TranslationsChinese from './zh';\r\nexport default function (template: string, replacements: Record<string, string>): string {\r\n    const _replacements = replacements || {};\r\n\r\n    const _template = TranslationsChinese[template] || template;\r\n\r\n    return _template.replace(/{([^}]+)}/g, function (_, key) {\r\n        return _replacements[key] || '{' + key + '}';\r\n    });\r\n}\r\n","<template>\n    <v-app id=\"generator\">\n        <v-app-bar dense clipped-left clipped-right>\n            <h-button icon icon-name=\"mdi-undo-variant\" tooltip=\"撤销(Undo)\" @click=\"handleUndo\"></h-button>\n            <h-button\n                icon\n                icon-name=\"mdi-redo-variant\"\n                tooltip=\"恢复(Redo)\"\n                @click=\"handleRedo\"\n                class=\"ml-1\"\n            ></h-button>\n            <h-button\n                icon\n                icon-name=\"mdi-magnify-plus-outline\"\n                tooltip=\"放大\"\n                @click=\"handleZoom(0.1)\"\n                class=\"ml-1\"\n            ></h-button>\n            <h-button\n                icon\n                icon-name=\"mdi-magnify-minus-outline\"\n                tooltip=\"缩小\"\n                @click=\"handleZoom(-0.1)\"\n                class=\"ml-1\"\n            ></h-button>\n            <h-button\n                icon\n                icon-name=\"mdi-cloud-upload-outline\"\n                tooltip=\"部署\"\n                @click=\"deploy()\"\n                class=\"ml-1\"\n            ></h-button>\n            <h-button\n                icon\n                icon-name=\"mdi-folder-open-outline\"\n                tooltip=\"打开\"\n                @click=\"$refs.loadXml.click()\"\n                class=\"ml-1\"\n            ></h-button>\n            <input\n                type=\"file\"\n                ref=\"loadXml\"\n                class=\"file-input\"\n                @change=\"loadLocalDiagram()\"\n                accept=\".bpmn, .bpmn20.xml\"\n            />\n            <h-button icon icon-name=\"mdi-xml\" tooltip=\"保存XML\" @click=\"saveXML()\" class=\"ml-1\"></h-button>\n            <h-button icon icon-name=\"mdi-svg\" tooltip=\"保存SVG\" @click=\"saveSVG()\" class=\"ml-1\"></h-button>\n            <v-spacer></v-spacer>\n            <!-- <v-toolbar-title>Bpmn Modeler</v-toolbar-title> -->\n            <v-btn large icon>\n                <v-icon>mdi-volleyball</v-icon>\n            </v-btn>\n        </v-app-bar>\n\n        <v-main class=\"pa-0\">\n            <v-container grid-list-xl fluid>\n                <v-row>\n                    <v-col cols=\"10\" class=\"pa-0\">\n                        <div class=\"containers\">\n                            <div id=\"canvas\" class=\"canvas\"></div>\n                        </div>\n                    </v-col>\n                    <v-col cols=\"2\" class=\"pa-0\">\n                        <div id=\"properties-panel\" class=\"properties-panel\"></div>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </v-main>\n\n        <!-- <v-navigation-drawer clipped app hide-overlay right width=\"360px\">\n            <h-property-panel :element=\"element\"></h-property-panel>\n        </v-navigation-drawer> -->\n    </v-app>\n</template>\n\n\n<script lang=\"ts\">\nimport { Component, Emit, Prop, Vue, Watch } from 'vue-property-decorator';\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\nimport PropertiesPanelModule from 'bpmn-js-properties-panel'; // 属性面板\nimport PropertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\nimport CamundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda.json';\nimport HButton from '@hecate/h-button';\nimport { library } from '@hecate/utils';\nimport { BpmnTranslate } from './lib';\n\n@Component({\n    components: {\n        HButton,\n    },\n})\nexport default class HBpmnModdle extends Vue {\n    @Prop(String) value!: string;\n\n    private diagram = '';\n    private bpmnModeler = {} as InstanceType<typeof BpmnModeler>;\n    private scale = 1;\n    private element = {};\n    private fileName = '';\n\n    private mounted(): void {\n        this.init();\n    }\n\n    private beforeDestroy(): void {\n        this.bpmnModeler.destroy();\n    }\n\n    @Watch('value', { immediate: true })\n    private onValueChange(newValue: string) {\n        this.diagram = newValue;\n    }\n    @Watch('diagram')\n    private onModelChange(newValue: string) {\n        this.$emit('input', newValue);\n    }\n\n    @Emit()\n    private async deploy() {\n        const { value: savedFileName } = await this.showInputFileNameDialog();\n        if (savedFileName) {\n            return this.createFormData(savedFileName, this.diagram);\n        }\n    }\n\n    // Bpmn-js 相关代码\n    private init(): void {\n        this.bpmnModeler = this.createBpmnModeler();\n        this.createNewDiagram(this.diagram);\n    }\n\n    private createBpmnModeler(): InstanceType<typeof BpmnModeler> {\n        return new BpmnModeler({\n            container: '#canvas',\n            keyboard: {\n                bindTo: window,\n            },\n            // 添加控制板\n            propertiesPanel: {\n                parent: '#properties-panel',\n            },\n            additionalModules: [\n                // 左边工具栏以及节点\n                PropertiesProviderModule,\n                // 右边的工具栏\n                PropertiesPanelModule,\n                // 汉化\n                BpmnTranslate,\n            ],\n            moddleExtensions: {\n                camunda: CamundaModdleDescriptor,\n            },\n        });\n    }\n\n    private async createNewDiagram(diagram: string): Promise<void> {\n        try {\n            let result = await this.bpmnModeler.importXML(diagram);\n            const { warnings } = result;\n\n            this.addListeners();\n\n            console.log('[HBM] |- Create New Diagram Success !', warnings);\n\n            let canvas = this.getCanvas();\n            canvas.zoom('fit-viewport', 'auto');\n\n            this.element = canvas.getRootElement();\n        } catch (err) {\n            const { warnings, message } = err;\n            console.error('[HBM] |- Could not create BPMN 2.0 diagram!', warnings, message);\n        }\n    }\n\n    private addListeners(): void {\n        this.addModelerListener();\n        this.addEventBusListener();\n    }\n    // 监听 modeler\n    private addModelerListener(): void {\n        // const _that = this;\n        // // 这里我是用了一个forEach给modeler上添加要绑定的事件\n        // const events = ['shape.added', 'shape.move.end', 'shape.removed'];\n        // events.forEach((event) => {\n        //     _that.bpmnModeler.on(event, (e) => {\n        //         console.log('[HBM] |- (1) Event is: ', event);\n        //         console.log('[HBM] |- (2) Param is: ', e);\n        //         let shape = e.element ? _that.getShape(e.element.id) : e.shape;\n        //         console.log('[HBM] |- (3) Shape is: ', shape);\n        //         if (event === 'shape.added') {\n        //             console.log('[HBM] |- Add shape.');\n        //         } else if (event === 'shape.move.end') {\n        //             console.log('[HBM] |- Move shape');\n        //         } else if (event === 'shape.removed') {\n        //             console.log('[HBM] |- Remove shape');\n        //         }\n        //     });\n        // });\n    }\n\n    private addEventBusListener(): void {\n        const _that = this;\n        const eventBus = _that.getEventBus();\n        const eventTypes = ['element.click', 'element.changed'];\n\n        eventTypes.forEach((eventType) => {\n            eventBus.on(eventType, (e) => {\n                console.log('[HBM] |- Event Type : ', eventType);\n                console.log('[HBM] |- E : ', e);\n                if (!e || e.element.type == 'bpmn:Process') return;\n                if (eventType === 'element.changed') {\n                    _that.elementChanged(e);\n                } else if (eventType === 'element.click') {\n                    _that.element = e.element;\n                    console.log(e.element.id);\n                }\n            });\n        });\n    }\n\n    private elementChanged(e): void {\n        const _that = this;\n        let shape = _that.getShape(e.element.id);\n        this.element = shape;\n        if (!shape) {\n            // 若是shape为null则表示删除, 无论是shape还是connect删除都调用此处\n            console.log('[HBM] |- Invalid shape.');\n        } else if (shape.type && !_that.isInvalid(shape.type)) {\n            // 由于上面已经用 shape.removed 检测了shape的删除, 因此这里只判断是否是线\n            if (_that.isSequenceFlow(shape.type)) {\n                console.log('[HBM] |- Changing line.');\n            }\n        }\n    }\n\n    // 自定义相关代码\n    private loadLocalDiagram(): void {\n        const _that = this;\n        const file = (_that.$refs.loadXml as HTMLInputElement).files[0];\n        let reader = new FileReader();\n        reader.onload = () => {\n            _that.diagram = reader.result as string;\n            _that.createNewDiagram(_that.diagram);\n        };\n        reader.readAsText(file);\n    }\n\n    private showInputFileNameDialog() {\n        return library.Swal.fire({\n            title: '请输入文件名',\n            input: 'text',\n            inputLabel: '保存的文件名',\n            inputValue: '',\n            showCancelButton: true,\n            cancelButtonColor: '#d33',\n            confirmButtonText: '确认',\n            cancelButtonText: '取消',\n            inputValidator: (value) => {\n                if (!value) {\n                    return '请输入文件名!';\n                }\n            },\n        });\n    }\n\n    private handleUpload(): void {}\n\n    private createFormData(name, xml, source = '', fileName = '') {\n        let formData = new FormData();\n        formData.append('deployment-name', name);\n        formData.append('enable-duplicate-filtering', 'false');\n        formData.append('deploy-changed-only', 'false');\n        let deploymentSource = source ? source : 'Middle stage';\n        formData.append('deployment-source', deploymentSource);\n        let blob = new Blob([xml], { type: 'application/octet-stream' });\n        let bpmnFileName = this.checkFileName(fileName, name);\n        formData.append('data', blob, bpmnFileName);\n        return formData;\n    }\n\n    private checkFileName(fileName, defaultName): string {\n        let bpmnFileName = fileName ? fileName : defaultName;\n        if (library.lodash.endsWith(bpmnFileName, '.bpmn') || library.lodash.endsWith(bpmnFileName, '.bpmn20.xml')) {\n            return bpmnFileName;\n        } else {\n            return bpmnFileName + '.bpmn';\n        }\n    }\n\n    public getCanvas(): any {\n        return this.bpmnModeler.get('canvas');\n    }\n\n    public getCommandStack(): any {\n        return this.bpmnModeler.get('commandStack');\n    }\n\n    public getElementRegistry(): any {\n        return this.bpmnModeler.get('elementRegistry');\n    }\n\n    public getEventBus(): any {\n        return this.bpmnModeler.get('eventBus');\n    }\n\n    public getShape(id: string): any {\n        const elementRegistry = this.getElementRegistry();\n        return elementRegistry.get(id);\n    }\n\n    /**\n     * 判断是否是无效的值\n     */\n    public isInvalid(param: string): boolean {\n        return param === null || param === undefined || param === '';\n    }\n\n    /**\n     * // 判断是否是线\n     */\n    public isSequenceFlow(type: string): boolean {\n        return type === 'bpmn:SequenceFlow';\n    }\n\n    public async saveSVG(): Promise<void> {\n        try {\n            const result = await this.bpmnModeler.saveSVG({ format: true });\n            const { svg } = result;\n\n            this.download(svg, 'svg');\n        } catch (err) {\n            const { warnings, message } = err;\n            console.error('[HBM] |- Error happened saving svg: ', warnings, message);\n        }\n    }\n    public async saveXML(): Promise<void> {\n        try {\n            const result = await this.bpmnModeler.saveXML({ format: true });\n            const { xml } = result;\n\n            this.download(xml, 'xml');\n        } catch (err) {\n            const { warnings, message } = err;\n            console.error('[HBM] |- Error happened saving xml: ', warnings, message);\n        }\n    }\n\n    // 前进\n    public handleRedo(): void {\n        this.getCommandStack().redo();\n    }\n    // 后退\n    public handleUndo(): void {\n        this.getCommandStack().undo();\n    }\n\n    // 放大缩小\n    public handleZoom(radio: number): void {\n        let newScale = 1.0;\n        if (radio) {\n            if (this.scale + radio <= 0.2) {\n                newScale = 0.2;\n            } else {\n                newScale = this.scale + radio;\n            }\n        }\n        this.getCanvas().zoom(newScale);\n        this.scale = newScale;\n    }\n\n    private createDownloadLink(name: string, data: Blob, type = 'xml'): void {\n        let downloadLink = document.createElement('a');\n        downloadLink.download = name + '.' + type.toLowerCase();\n        downloadLink.innerHTML = 'Save BPMN ' + type.toUpperCase;\n        downloadLink.href = window.URL.createObjectURL(data);\n        downloadLink.onclick = function (event) {\n            document.body.removeChild(event.target as HTMLElement);\n        };\n        downloadLink.style.visibility = 'hidden';\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n    }\n\n    private async download(data, type = 'xml') {\n        let dataType = type.toLowerCase();\n\n        let dataBlob = new Blob([data], {\n            type: 'application/bpmn20-xml;charset=UTF-8,',\n        });\n\n        if (dataType === 'svg') {\n            dataBlob = new Blob([data], {\n                type: 'image/svg+xml',\n            });\n        }\n\n        if (this.fileName) {\n            this.createDownloadLink(this.fileName, dataBlob, dataType);\n        } else {\n            const { value: savedFileName } = await this.showInputFileNameDialog();\n            if (savedFileName) {\n                this.fileName = savedFileName;\n                this.createDownloadLink(savedFileName, dataBlob, dataType);\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n/*左边工具栏以及编辑节点的样式*/\n@import '~bpmn-js/dist/assets/diagram-js.css';\n@import '~bpmn-js/dist/assets/bpmn-font/css/bpmn.css';\n@import '~bpmn-js/dist/assets/bpmn-font/css/bpmn-codes.css';\n@import '~bpmn-js/dist/assets/bpmn-font/css/bpmn-embedded.css';\n/*右边工具栏样式*/\n@import '~bpmn-js-properties-panel/dist/assets/bpmn-js-properties-panel.css';\n\n.containers {\n    background: white;\n    overflow: auto;\n    background-image: linear-gradient(90deg, rgba(220, 220, 220, 0.5) 6%, transparent 0),\n        linear-gradient(rgba(192, 192, 192, 0.5) 6%, transparent 0);\n    background-size: 12px 12px;\n    width: 100%;\n    height: calc(100vh - 50px);\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n}\n.canvas {\n    width: 100%;\n    height: 100%;\n}\n\n.properties-panel {\n    // position: absolute;\n    width: 100%;\n}\n\n.file-input {\n    height: 0;\n    width: 0;\n    visibility: hidden;\n}\n\n// 去掉bpmn-js图标\n.bjs-powered-by {\n    display: none;\n}\n\n.bpp-properties-panel {\n    overflow: auto;\n    height: calc(100vh);\n    border: 1px solid #dedede;\n    background-color: #f8f8f8;\n}\n</style>\n","import Vue from 'vue';\n\nimport HBpmnModdle from './HBpmnModdle.vue';\n\nconst HBpmnModdleInstall = {\n    install(vue: typeof Vue): void {\n        vue.component('HBpmnModdle', HBpmnModdle);\n    },\n};\n\nexport default HBpmnModdle;\nexport { HBpmnModdleInstall as HBpmnModdleComponent };\n"],"names":["TranslationsChinese","Activate the global connect tool","Append {type}","Add Lane above","Divide into two Lanes","Divide into three Lanes","Add Lane below","Append compensation activity","Change type","Connect using Association","Connect using Sequence/MessageFlow or Association","Connect using DataInputAssociation","Remove","Activate the hand tool","Activate the lasso tool","Activate the create/remove space tool","Create expanded SubProcess","Create IntermediateThrowEvent/BoundaryEvent","Create Pool/Participant","Parallel Multi Instance","Sequential Multi Instance","DataObjectReference","DataStoreReference","Loop","Ad-hoc","Create {type}","Task","Send Task","Receive Task","User Task","Manual Task","Business Rule Task","Service Task","Script Task","Call Activity","Sub Process (collapsed)","Sub Process (expanded)","Start Event","StartEvent","Intermediate Throw Event","End Event","EndEvent","Create Gateway","Create Intermediate/Boundary Event","Message Start Event","Timer Start Event","Conditional Start Event","Signal Start Event","Error Start Event","Escalation Start Event","Compensation Start Event","Message Start Event (non-interrupting)","Timer Start Event (non-interrupting)","Conditional Start Event (non-interrupting)","Signal Start Event (non-interrupting)","Escalation Start Event (non-interrupting)","Message Intermediate Catch Event","Message Intermediate Throw Event","Timer Intermediate Catch Event","Escalation Intermediate Throw Event","Conditional Intermediate Catch Event","Link Intermediate Catch Event","Link Intermediate Throw Event","Compensation Intermediate Throw Event","Signal Intermediate Catch Event","Signal Intermediate Throw Event","Message End Event","Escalation End Event","Error End Event","Cancel End Event","Compensation End Event","Signal End Event","Terminate End Event","Message Boundary Event","Message Boundary Event (non-interrupting)","Timer Boundary Event","Timer Boundary Event (non-interrupting)","Escalation Boundary Event","Escalation Boundary Event (non-interrupting)","Conditional Boundary Event","Conditional Boundary Event (non-interrupting)","Error Boundary Event","Cancel Boundary Event","Signal Boundary Event","Signal Boundary Event (non-interrupting)","Compensation Boundary Event","Exclusive Gateway","Parallel Gateway","Inclusive Gateway","Complex Gateway","Event based Gateway","Transaction","Sub Process","Event Sub Process","Collapsed Pool","Expanded Pool","no parent for {element} in {parent}","no shape type specified","flow elements must be children of pools/participants","out of bounds release","more than {count} child lanes","element required","diagram not part of bpmn:Definitions","no diagram to display","no process or collaboration to display","element {element} referenced by {referenced}#{property} not yet drawn","already rendered {element}","failed to import {element}","Id","Name","General","Details","Message Name","Message","Initiator","Asynchronous Continuations","Asynchronous Before","Asynchronous After","Job Configuration","Exclusive","Job Priority","Retry Time Cycle","Documentation","Element Documentation","History Configuration","History Time To Live","Forms","Form Key","Form Fields","Business Key","Form Field","ID","Type","Label","Default Value","Validation","Add Constraint","Config","Properties","Add Property","Value","Listeners","Execution Listener","Event Type","Listener Type","Java Class","Expression","Must provide a value","Delegate Expression","Script","Script Format","Script Type","Inline Script","External Script","Resource","Field Injection","Extensions","Input/Output","Input Parameters","Output Parameters","Parameters","Output Parameter","Timer Definition Type","Timer Definition","Date","Duration","Cycle","Signal","Signal Name","Escalation","Error","Link Name","Condition","Variable Name","Variable Event","Specify more than one variable change event as a comma separated list.","Wait for Completion","Activity Ref","Version Tag","Executable","External Task Configuration","Task Priority","External","Connector","Must configure Connector","Connector Id","Implementation","Field Injections","Fields","Result Variable","Topic","Configure Connector","Input Parameter","Assignee","Candidate Users","Candidate Groups","Due Date","Follow Up Date","Priority","The follow up date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)","The due date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)","Variables","BpmnTranslate","translate","template","replacements","const","_replacements","HBpmnModdle","Vue","this","bpmnModeler","destroy","prototype","onValueChange","newValue","diagram","onModelChange","$emit","deploy","savedFileName","createBpmnModeler","createNewDiagram","container","keyboard","bindTo","window","propertiesPanel","parent","additionalModules","moddleExtensions","camunda","CamundaModdleDescriptor","warnings","console","log","let","canvas","getCanvas","zoom","element","getRootElement","err","warnings$1","message","eventBus","_that","getEventBus","forEach","eventType","e","elementChanged","shape","getShape","id","type","isInvalid","file","$refs","loadXml","files","reader","FileReader","onload","result","readAsText","library","Swal","fire","title","input","inputLabel","inputValue","showCancelButton","cancelButtonColor","confirmButtonText","cancelButtonText","inputValidator","value","handleUpload","formData","FormData","append","name","deploymentSource","blob","Blob","xml","bpmnFileName","getElementRegistry","get","param","isSequenceFlow","saveSVG","svg","format","download","saveXML","getCommandStack","redo","undo","handleZoom","radio","scale","newScale","createDownloadLink","data","downloadLink","onclick","event","style","visibility","document","body","appendChild","async","dataType","toLowerCase","dataBlob","fileName","__decorate","Emit","Component","components","HBpmnModdleInstall","install","vue","component"],"mappings":"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"}