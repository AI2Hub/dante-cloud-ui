declare const _default: {
    'Activate the global connect tool': string;
    'Append {type}': string;
    'Add Lane above': string;
    'Divide into two Lanes': string;
    'Divide into three Lanes': string;
    'Add Lane below': string;
    'Append compensation activity': string;
    'Change type': string;
    'Connect using Association': string;
    'Connect using Sequence/MessageFlow or Association': string;
    'Connect using DataInputAssociation': string;
    Remove: string;
    'Activate the hand tool': string;
    'Activate the lasso tool': string;
    'Activate the create/remove space tool': string;
    'Create expanded SubProcess': string;
    'Create IntermediateThrowEvent/BoundaryEvent': string;
    'Create Pool/Participant': string;
    'Parallel Multi Instance': string;
    'Sequential Multi Instance': string;
    DataObjectReference: string;
    DataStoreReference: string;
    Loop: string;
    'Ad-hoc': string;
    'Create {type}': string;
    Task: string;
    'Send Task': string;
    'Receive Task': string;
    'User Task': string;
    'Manual Task': string;
    'Business Rule Task': string;
    'Service Task': string;
    'Script Task': string;
    'Call Activity': string;
    'Sub Process (collapsed)': string;
    'Sub Process (expanded)': string;
    'Start Event': string;
    StartEvent: string;
    'Intermediate Throw Event': string;
    'End Event': string;
    EndEvent: string;
    'Create Gateway': string;
    'Create Intermediate/Boundary Event': string;
    'Message Start Event': string;
    'Timer Start Event': string;
    'Conditional Start Event': string;
    'Signal Start Event': string;
    'Error Start Event': string;
    'Escalation Start Event': string;
    'Compensation Start Event': string;
    'Message Start Event (non-interrupting)': string;
    'Timer Start Event (non-interrupting)': string;
    'Conditional Start Event (non-interrupting)': string;
    'Signal Start Event (non-interrupting)': string;
    'Escalation Start Event (non-interrupting)': string;
    'Message Intermediate Catch Event': string;
    'Message Intermediate Throw Event': string;
    'Timer Intermediate Catch Event': string;
    'Escalation Intermediate Throw Event': string;
    'Conditional Intermediate Catch Event': string;
    'Link Intermediate Catch Event': string;
    'Link Intermediate Throw Event': string;
    'Compensation Intermediate Throw Event': string;
    'Signal Intermediate Catch Event': string;
    'Signal Intermediate Throw Event': string;
    'Message End Event': string;
    'Escalation End Event': string;
    'Error End Event': string;
    'Cancel End Event': string;
    'Compensation End Event': string;
    'Signal End Event': string;
    'Terminate End Event': string;
    'Message Boundary Event': string;
    'Message Boundary Event (non-interrupting)': string;
    'Timer Boundary Event': string;
    'Timer Boundary Event (non-interrupting)': string;
    'Escalation Boundary Event': string;
    'Escalation Boundary Event (non-interrupting)': string;
    'Conditional Boundary Event': string;
    'Conditional Boundary Event (non-interrupting)': string;
    'Error Boundary Event': string;
    'Cancel Boundary Event': string;
    'Signal Boundary Event': string;
    'Signal Boundary Event (non-interrupting)': string;
    'Compensation Boundary Event': string;
    'Exclusive Gateway': string;
    'Parallel Gateway': string;
    'Inclusive Gateway': string;
    'Complex Gateway': string;
    'Event based Gateway': string;
    Transaction: string;
    'Sub Process': string;
    'Event Sub Process': string;
    'Collapsed Pool': string;
    'Expanded Pool': string;
    'no parent for {element} in {parent}': string;
    'no shape type specified': string;
    'flow elements must be children of pools/participants': string;
    'out of bounds release': string;
    'more than {count} child lanes': string;
    'element required': string;
    'diagram not part of bpmn:Definitions': string;
    'no diagram to display': string;
    'no process or collaboration to display': string;
    'element {element} referenced by {referenced}#{property} not yet drawn': string;
    'already rendered {element}': string;
    'failed to import {element}': string;
    Id: string;
    Name: string;
    General: string;
    Details: string;
    'Message Name': string;
    Message: string;
    Initiator: string;
    'Asynchronous Continuations': string;
    'Asynchronous Before': string;
    'Asynchronous After': string;
    'Job Configuration': string;
    Exclusive: string;
    'Job Priority': string;
    'Retry Time Cycle': string;
    Documentation: string;
    'Element Documentation': string;
    'History Configuration': string;
    'History Time To Live': string;
    Forms: string;
    'Form Key': string;
    'Form Fields': string;
    'Business Key': string;
    'Form Field': string;
    ID: string;
    Type: string;
    Label: string;
    'Default Value': string;
    Validation: string;
    'Add Constraint': string;
    Config: string;
    Properties: string;
    'Add Property': string;
    Value: string;
    Listeners: string;
    'Execution Listener': string;
    'Event Type': string;
    'Listener Type': string;
    'Java Class': string;
    Expression: string;
    'Must provide a value': string;
    'Delegate Expression': string;
    Script: string;
    'Script Format': string;
    'Script Type': string;
    'Inline Script': string;
    'External Script': string;
    Resource: string;
    'Field Injection': string;
    Extensions: string;
    'Input/Output': string;
    'Input Parameters': string;
    'Output Parameters': string;
    Parameters: string;
    'Output Parameter': string;
    'Timer Definition Type': string;
    'Timer Definition': string;
    Date: string;
    Duration: string;
    Cycle: string;
    Signal: string;
    'Signal Name': string;
    Escalation: string;
    Error: string;
    'Link Name': string;
    Condition: string;
    'Variable Name': string;
    'Variable Event': string;
    'Specify more than one variable change event as a comma separated list.': string;
    'Wait for Completion': string;
    'Activity Ref': string;
    'Version Tag': string;
    Executable: string;
    'External Task Configuration': string;
    'Task Priority': string;
    External: string;
    Connector: string;
    'Must configure Connector': string;
    'Connector Id': string;
    Implementation: string;
    'Field Injections': string;
    Fields: string;
    'Result Variable': string;
    Topic: string;
    'Configure Connector': string;
    'Input Parameter': string;
    Assignee: string;
    'Candidate Users': string;
    'Candidate Groups': string;
    'Due Date': string;
    'Follow Up Date': string;
    Priority: string;
    'The follow up date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)': string;
    'The due date as an EL expression (e.g. ${someDate} or an ISO date (e.g. 2015-06-26T09:54:00)': string;
    Variables: string;
};
export default _default;
//# sourceMappingURL=zh.d.ts.map